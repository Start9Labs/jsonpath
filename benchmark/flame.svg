<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="950.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="933" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="933" > </text>
<g id="frames">
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::and (17 samples, 7.91%)</title><rect x="575.3" y="437" width="93.3" height="15.0" fill="rgb(252,41,50)" rx="2" ry="2" />
<text  x="578.30" y="447.5" >jsonpath_li..</text>
</g>
<g >
<title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (16 samples, 7.44%)</title><rect x="580.8" y="357" width="87.8" height="15.0" fill="rgb(253,64,29)" rx="2" ry="2" />
<text  x="583.79" y="367.5" >&lt;serde_jso..</text>
</g>
<g >
<title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (21 samples, 9.77%)</title><rect x="767.4" y="357" width="115.3" height="15.0" fill="rgb(218,155,47)" rx="2" ry="2" />
<text  x="770.40" y="367.5" >&lt;serde_json::m..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (3 samples, 1.40%)</title><rect x="191.1" y="309" width="16.5" height="15.0" fill="rgb(223,35,20)" rx="2" ry="2" />
<text  x="194.12" y="319.5" ></text>
</g>
<g >
<title>perf (7 samples, 3.26%)</title><rect x="1151.6" y="885" width="38.4" height="15.0" fill="rgb(240,14,7)" rx="2" ry="2" />
<text  x="1154.58" y="895.5" >perf</text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3 samples, 1.40%)</title><rect x="718.0" y="229" width="16.5" height="15.0" fill="rgb(228,199,20)" rx="2" ry="2" />
<text  x="721.00" y="239.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 1.40%)</title><rect x="696.0" y="293" width="16.5" height="15.0" fill="rgb(251,186,43)" rx="2" ry="2" />
<text  x="699.05" y="303.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (30 samples, 13.95%)</title><rect x="921.1" y="325" width="164.6" height="15.0" fill="rgb(211,229,26)" rx="2" ry="2" />
<text  x="924.07" y="335.5" >&lt;core::iter::adapters..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::read_token (5 samples, 2.33%)</title><rect x="493.0" y="469" width="27.4" height="15.0" fill="rgb(249,54,36)" rx="2" ry="2" />
<text  x="495.98" y="479.5" >j..</text>
</g>
<g >
<title>path_openat (1 samples, 0.47%)</title><rect x="1140.6" y="485" width="5.5" height="15.0" fill="rgb(254,153,19)" rx="2" ry="2" />
<text  x="1143.60" y="495.5" ></text>
</g>
<g >
<title>_x64_sys_openat (1 samples, 0.47%)</title><rect x="1140.6" y="549" width="5.5" height="15.0" fill="rgb(251,117,33)" rx="2" ry="2" />
<text  x="1143.60" y="559.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::IndexMap&lt;K,V1,S1&gt; as core::cmp::PartialEq&lt;indexmap::map::IndexMap&lt;K,V2,S2&gt;&gt;&gt;::eq::{{closure}} (15 samples, 6.98%)</title><rect x="586.3" y="261" width="82.3" height="15.0" fill="rgb(242,140,13)" rx="2" ry="2" />
<text  x="589.28" y="271.5" >&lt;indexmap..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.93%)</title><rect x="679.6" y="149" width="11.0" height="15.0" fill="rgb(208,96,39)" rx="2" ry="2" />
<text  x="682.58" y="159.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array_start (37 samples, 17.21%)</title><rect x="97.8" y="453" width="203.1" height="15.0" fill="rgb(211,200,6)" rx="2" ry="2" />
<text  x="100.81" y="463.5" >jsonpath_lib::paths::path_..</text>
</g>
<g >
<title>int_free (1 samples, 0.47%)</title><rect x="37.4" y="309" width="5.5" height="15.0" fill="rgb(213,29,40)" rx="2" ry="2" />
<text  x="40.44" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (3 samples, 1.40%)</title><rect x="740.0" y="245" width="16.4" height="15.0" fill="rgb(224,50,34)" rx="2" ry="2" />
<text  x="742.95" y="255.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (1 samples, 0.47%)</title><rect x="125.3" y="261" width="5.4" height="15.0" fill="rgb(237,94,8)" rx="2" ry="2" />
<text  x="128.26" y="271.5" ></text>
</g>
<g >
<title>core::sync::atomic::AtomicUsize::load (1 samples, 0.47%)</title><rect x="295.4" y="389" width="5.5" height="15.0" fill="rgb(248,168,37)" rx="2" ry="2" />
<text  x="298.40" y="399.5" ></text>
</g>
<g >
<title>_set_task_comm (7 samples, 3.26%)</title><rect x="1151.6" y="757" width="38.4" height="15.0" fill="rgb(252,72,29)" rx="2" ry="2" />
<text  x="1154.58" y="767.5" >_se..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="794.8" y="213" width="22.0" height="15.0" fill="rgb(253,212,31)" rx="2" ry="2" />
<text  x="797.84" y="223.5" >&lt;..</text>
</g>
<g >
<title>wp_page_copy (1 samples, 0.47%)</title><rect x="1146.1" y="677" width="5.5" height="15.0" fill="rgb(207,136,1)" rx="2" ry="2" />
<text  x="1149.09" y="687.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.93%)</title><rect x="624.7" y="149" width="11.0" height="15.0" fill="rgb(251,107,18)" rx="2" ry="2" />
<text  x="627.70" y="159.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (1 samples, 0.47%)</title><rect x="707.0" y="69" width="5.5" height="15.0" fill="rgb(224,220,4)" rx="2" ry="2" />
<text  x="710.02" y="79.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt; (8 samples, 3.72%)</title><rect x="32.0" y="421" width="43.9" height="15.0" fill="rgb(229,227,31)" rx="2" ry="2" />
<text  x="34.95" y="431.5" >core..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 3.72%)</title><rect x="712.5" y="357" width="43.9" height="15.0" fill="rgb(233,54,19)" rx="2" ry="2" />
<text  x="715.51" y="367.5" >&lt;all..</text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 1.86%)</title><rect x="712.5" y="261" width="22.0" height="15.0" fill="rgb(239,60,41)" rx="2" ry="2" />
<text  x="715.51" y="271.5" >c..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (23 samples, 10.70%)</title><rect x="756.4" y="421" width="126.3" height="15.0" fill="rgb(220,120,6)" rx="2" ry="2" />
<text  x="759.42" y="431.5" >jsonpath_lib::s..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_movemask_epi8 (2 samples, 0.93%)</title><rect x="1052.8" y="101" width="11.0" height="15.0" fill="rgb(233,229,30)" rx="2" ry="2" />
<text  x="1055.79" y="111.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 9.77%)</title><rect x="767.4" y="309" width="115.3" height="15.0" fill="rgb(232,32,27)" rx="2" ry="2" />
<text  x="770.40" y="319.5" >core::iter::tr..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.47%)</title><rect x="707.0" y="133" width="5.5" height="15.0" fill="rgb(226,19,49)" rx="2" ry="2" />
<text  x="710.02" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (12 samples, 5.58%)</title><rect x="816.8" y="213" width="65.9" height="15.0" fill="rgb(245,206,39)" rx="2" ry="2" />
<text  x="819.79" y="223.5" >hashbro..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.47%)</title><rect x="997.9" y="117" width="5.5" height="15.0" fill="rgb(219,32,35)" rx="2" ry="2" />
<text  x="1000.91" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.47%)</title><rect x="1140.6" y="581" width="5.5" height="15.0" fill="rgb(212,177,28)" rx="2" ry="2" />
<text  x="1143.60" y="591.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.86%)</title><rect x="712.5" y="293" width="22.0" height="15.0" fill="rgb(247,193,53)" rx="2" ry="2" />
<text  x="715.51" y="303.5" >&lt;..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (21 samples, 9.77%)</title><rect x="767.4" y="293" width="115.3" height="15.0" fill="rgb(215,130,5)" rx="2" ry="2" />
<text  x="770.40" y="303.5" >core::iter::tr..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.47%)</title><rect x="1140.6" y="565" width="5.5" height="15.0" fill="rgb(243,67,1)" rx="2" ry="2" />
<text  x="1143.60" y="575.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParserImpl&gt; (8 samples, 3.72%)</title><rect x="32.0" y="437" width="43.9" height="15.0" fill="rgb(253,137,23)" rx="2" ry="2" />
<text  x="34.95" y="447.5" >core..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (2 samples, 0.93%)</title><rect x="701.5" y="229" width="11.0" height="15.0" fill="rgb(247,175,9)" rx="2" ry="2" />
<text  x="704.53" y="239.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (1 samples, 0.47%)</title><rect x="15.5" y="533" width="5.5" height="15.0" fill="rgb(235,0,27)" rx="2" ry="2" />
<text  x="18.49" y="543.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str (40 samples, 18.60%)</title><rect x="921.1" y="437" width="219.5" height="15.0" fill="rgb(228,113,1)" rx="2" ry="2" />
<text  x="924.07" y="447.5" >jsonpath_lib::selector::terms..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (45 samples, 20.93%)</title><rect x="75.9" y="485" width="246.9" height="15.0" fill="rgb(215,70,15)" rx="2" ry="2" />
<text  x="78.86" y="495.5" >jsonpath_lib::paths::path_parser..</text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.47%)</title><rect x="707.0" y="149" width="5.5" height="15.0" fill="rgb(205,187,7)" rx="2" ry="2" />
<text  x="710.02" y="159.5" ></text>
</g>
<g >
<title>log::max_level (1 samples, 0.47%)</title><rect x="295.4" y="405" width="5.5" height="15.0" fill="rgb(228,90,52)" rx="2" ry="2" />
<text  x="298.40" y="415.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::string_to_num (3 samples, 1.40%)</title><rect x="141.7" y="309" width="16.5" height="15.0" fill="rgb(209,15,5)" rx="2" ry="2" />
<text  x="144.72" y="319.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (1 samples, 0.47%)</title><rect x="569.8" y="421" width="5.5" height="15.0" fill="rgb(210,95,46)" rx="2" ry="2" />
<text  x="572.81" y="431.5" ></text>
</g>
<g >
<title>native_flush_tlb_one_user (1 samples, 0.47%)</title><rect x="1146.1" y="613" width="5.5" height="15.0" fill="rgb(216,82,29)" rx="2" ry="2" />
<text  x="1149.09" y="623.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="981.4" y="165" width="5.5" height="15.0" fill="rgb(221,131,30)" rx="2" ry="2" />
<text  x="984.44" y="175.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (1 samples, 0.47%)</title><rect x="690.6" y="165" width="5.4" height="15.0" fill="rgb(225,12,30)" rx="2" ry="2" />
<text  x="693.56" y="175.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_absolute (1 samples, 0.47%)</title><rect x="547.9" y="453" width="5.4" height="15.0" fill="rgb(231,2,27)" rx="2" ry="2" />
<text  x="550.86" y="463.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (9 samples, 4.19%)</title><rect x="932.0" y="229" width="49.4" height="15.0" fill="rgb(214,5,46)" rx="2" ry="2" />
<text  x="935.05" y="239.5" >inde..</text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.93%)</title><rect x="981.4" y="245" width="11.0" height="15.0" fill="rgb(241,8,1)" rx="2" ry="2" />
<text  x="984.44" y="255.5" ></text>
</g>
<g >
<title>core::str::&lt;impl str&gt;::parse (3 samples, 1.40%)</title><rect x="141.7" y="293" width="16.5" height="15.0" fill="rgb(219,211,7)" rx="2" ry="2" />
<text  x="144.72" y="303.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::new (37 samples, 17.21%)</title><rect x="322.8" y="501" width="203.1" height="15.0" fill="rgb(253,100,53)" rx="2" ry="2" />
<text  x="325.84" y="511.5" >jsonpath_lib::paths::token..</text>
</g>
<g >
<title>jsonpath_lib_benches::main (205 samples, 95.35%)</title><rect x="15.5" y="629" width="1125.1" height="15.0" fill="rgb(229,150,26)" rx="2" ry="2" />
<text  x="18.49" y="639.5" >jsonpath_lib_benches::main</text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.93%)</title><rect x="970.5" y="165" width="10.9" height="15.0" fill="rgb(248,199,17)" rx="2" ry="2" />
<text  x="973.47" y="175.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::selector_impl::JsonSelector&gt; (8 samples, 3.72%)</title><rect x="32.0" y="533" width="43.9" height="15.0" fill="rgb(207,59,18)" rx="2" ry="2" />
<text  x="34.95" y="543.5" >core..</text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.47%)</title><rect x="1047.3" y="117" width="5.5" height="15.0" fill="rgb(214,39,25)" rx="2" ry="2" />
<text  x="1050.30" y="127.5" ></text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.47%)</title><rect x="1107.7" y="229" width="5.5" height="15.0" fill="rgb(244,11,14)" rx="2" ry="2" />
<text  x="1110.67" y="239.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="992.4" y="165" width="5.5" height="15.0" fill="rgb(217,83,2)" rx="2" ry="2" />
<text  x="995.42" y="175.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokens::Token::reset_span (1 samples, 0.47%)</title><rect x="520.4" y="485" width="5.5" height="15.0" fill="rgb(234,33,22)" rx="2" ry="2" />
<text  x="523.42" y="495.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (1 samples, 0.47%)</title><rect x="652.1" y="133" width="5.5" height="15.0" fill="rgb(247,105,52)" rx="2" ry="2" />
<text  x="655.14" y="143.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpAnd as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json (16 samples, 7.44%)</title><rect x="580.8" y="405" width="87.8" height="15.0" fill="rgb(216,195,49)" rx="2" ry="2" />
<text  x="583.79" y="415.5" >&lt;jsonpath_..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 1.40%)</title><rect x="904.6" y="373" width="16.5" height="15.0" fill="rgb(208,85,27)" rx="2" ry="2" />
<text  x="907.60" y="383.5" ></text>
</g>
<g >
<title>main (206 samples, 95.81%)</title><rect x="15.5" y="837" width="1130.6" height="15.0" fill="rgb(242,89,14)" rx="2" ry="2" />
<text  x="18.49" y="847.5" >main</text>
</g>
<g >
<title>do_syscall_64 (7 samples, 3.26%)</title><rect x="1151.6" y="853" width="38.4" height="15.0" fill="rgb(237,89,49)" rx="2" ry="2" />
<text  x="1154.58" y="863.5" >do_..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 5.58%)</title><rect x="1008.9" y="181" width="65.8" height="15.0" fill="rgb(226,185,28)" rx="2" ry="2" />
<text  x="1011.88" y="191.5" >hashbro..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (6 samples, 2.79%)</title><rect x="174.7" y="341" width="32.9" height="15.0" fill="rgb(225,160,35)" rx="2" ry="2" />
<text  x="177.65" y="351.5" >js..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.47%)</title><rect x="202.1" y="277" width="5.5" height="15.0" fill="rgb(236,116,35)" rx="2" ry="2" />
<text  x="205.09" y="287.5" ></text>
</g>
<g >
<title>core::num::dec2flt::dec2flt (3 samples, 1.40%)</title><rect x="141.7" y="261" width="16.5" height="15.0" fill="rgb(239,174,22)" rx="2" ry="2" />
<text  x="144.72" y="271.5" ></text>
</g>
<g >
<title>_x64_sys_execve (1 samples, 0.47%)</title><rect x="10.0" y="837" width="5.5" height="15.0" fill="rgb(211,217,12)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::IndexMap&lt;K,V1,S1&gt; as core::cmp::PartialEq&lt;indexmap::map::IndexMap&lt;K,V2,S2&gt;&gt;&gt;::eq (21 samples, 9.77%)</title><rect x="767.4" y="341" width="115.3" height="15.0" fill="rgb(229,68,38)" rx="2" ry="2" />
<text  x="770.40" y="351.5" >&lt;indexmap::map..</text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select (112 samples, 52.09%)</title><rect x="525.9" y="517" width="614.7" height="15.0" fill="rgb(207,134,7)" rx="2" ry="2" />
<text  x="528.91" y="527.5" >jsonpath_lib::selector::selector_impl::JsonSelector::select</text>
</g>
<g >
<title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.47%)</title><rect x="476.5" y="469" width="5.5" height="15.0" fill="rgb(252,60,52)" rx="2" ry="2" />
<text  x="479.51" y="479.5" ></text>
</g>
<g >
<title>_GI___open64_nocancel (1 samples, 0.47%)</title><rect x="1140.6" y="597" width="5.5" height="15.0" fill="rgb(224,219,34)" rx="2" ry="2" />
<text  x="1143.60" y="607.5" ></text>
</g>
<g >
<title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (3 samples, 1.40%)</title><rect x="1118.7" y="325" width="16.4" height="15.0" fill="rgb(215,171,48)" rx="2" ry="2" />
<text  x="1121.65" y="335.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="718.0" y="117" width="5.5" height="15.0" fill="rgb(240,21,29)" rx="2" ry="2" />
<text  x="721.00" y="127.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::contains_key (9 samples, 4.19%)</title><rect x="932.0" y="261" width="49.4" height="15.0" fill="rgb(214,102,25)" rx="2" ry="2" />
<text  x="935.05" y="271.5" >serd..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParseNode&gt; (2 samples, 0.93%)</title><rect x="59.4" y="213" width="11.0" height="15.0" fill="rgb(243,73,39)" rx="2" ry="2" />
<text  x="62.40" y="223.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.47%)</title><rect x="707.0" y="85" width="5.5" height="15.0" fill="rgb(254,2,31)" rx="2" ry="2" />
<text  x="710.02" y="95.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.93%)</title><rect x="679.6" y="133" width="11.0" height="15.0" fill="rgb(231,171,21)" rx="2" ry="2" />
<text  x="682.58" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.47%)</title><rect x="1146.1" y="741" width="5.5" height="15.0" fill="rgb(235,60,8)" rx="2" ry="2" />
<text  x="1149.09" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::walk_dedup (30 samples, 13.95%)</title><rect x="921.1" y="277" width="164.6" height="15.0" fill="rgb(225,18,51)" rx="2" ry="2" />
<text  x="924.07" y="287.5" >jsonpath_lib::selecto..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.47%)</title><rect x="1107.7" y="277" width="5.5" height="15.0" fill="rgb(240,146,32)" rx="2" ry="2" />
<text  x="1110.67" y="287.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.47%)</title><rect x="1069.3" y="85" width="5.4" height="15.0" fill="rgb(223,189,45)" rx="2" ry="2" />
<text  x="1072.26" y="95.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 3.72%)</title><rect x="712.5" y="389" width="43.9" height="15.0" fill="rgb(235,55,14)" rx="2" ry="2" />
<text  x="715.51" y="399.5" >&lt;all..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 1.40%)</title><rect x="800.3" y="165" width="16.5" height="15.0" fill="rgb(242,166,11)" rx="2" ry="2" />
<text  x="803.33" y="175.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (1 samples, 0.47%)</title><rect x="1025.3" y="133" width="5.5" height="15.0" fill="rgb(222,205,19)" rx="2" ry="2" />
<text  x="1028.35" y="143.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;*const serde_json::value::Value&gt;&gt; (1 samples, 0.47%)</title><rect x="1107.7" y="373" width="5.5" height="15.0" fill="rgb(243,183,14)" rx="2" ry="2" />
<text  x="1110.67" y="383.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.93%)</title><rect x="970.5" y="133" width="10.9" height="15.0" fill="rgb(244,198,18)" rx="2" ry="2" />
<text  x="973.47" y="143.5" ></text>
</g>
<g >
<title>alloc::alloc::box_free (2 samples, 0.93%)</title><rect x="32.0" y="357" width="10.9" height="15.0" fill="rgb(221,67,18)" rx="2" ry="2" />
<text  x="34.95" y="367.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 2.79%)</title><rect x="339.3" y="437" width="32.9" height="15.0" fill="rgb(240,159,13)" rx="2" ry="2" />
<text  x="342.30" y="447.5" >al..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="932.0" y="165" width="22.0" height="15.0" fill="rgb(224,176,41)" rx="2" ry="2" />
<text  x="935.05" y="175.5" >&lt;..</text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.47%)</title><rect x="729.0" y="69" width="5.5" height="15.0" fill="rgb(250,154,33)" rx="2" ry="2" />
<text  x="731.98" y="79.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 10.23%)</title><rect x="761.9" y="389" width="120.8" height="15.0" fill="rgb(252,30,48)" rx="2" ry="2" />
<text  x="764.91" y="399.5" >core::cmp::impl..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (1 samples, 0.47%)</title><rect x="965.0" y="149" width="5.5" height="15.0" fill="rgb(238,38,15)" rx="2" ry="2" />
<text  x="967.98" y="159.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::parse (112 samples, 52.09%)</title><rect x="525.9" y="501" width="614.7" height="15.0" fill="rgb(208,73,32)" rx="2" ry="2" />
<text  x="528.91" y="511.5" >jsonpath_lib::paths::path_parser::PathParser::parse</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (3 samples, 1.40%)</title><rect x="191.1" y="325" width="16.5" height="15.0" fill="rgb(215,199,10)" rx="2" ry="2" />
<text  x="194.12" y="335.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (1 samples, 0.47%)</title><rect x="493.0" y="437" width="5.5" height="15.0" fill="rgb(225,122,7)" rx="2" ry="2" />
<text  x="495.98" y="447.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_token (1 samples, 0.47%)</title><rect x="185.6" y="325" width="5.5" height="15.0" fill="rgb(209,172,18)" rx="2" ry="2" />
<text  x="188.63" y="335.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (2 samples, 0.93%)</title><rect x="284.4" y="357" width="11.0" height="15.0" fill="rgb(231,21,50)" rx="2" ry="2" />
<text  x="287.42" y="367.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3 samples, 1.40%)</title><rect x="679.6" y="229" width="16.4" height="15.0" fill="rgb(228,208,27)" rx="2" ry="2" />
<text  x="682.58" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.47%)</title><rect x="997.9" y="101" width="5.5" height="15.0" fill="rgb(220,208,28)" rx="2" ry="2" />
<text  x="1000.91" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.93%)</title><rect x="32.0" y="341" width="10.9" height="15.0" fill="rgb(254,2,51)" rx="2" ry="2" />
<text  x="34.95" y="351.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.93%)</title><rect x="602.7" y="149" width="11.0" height="15.0" fill="rgb(240,53,15)" rx="2" ry="2" />
<text  x="605.74" y="159.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.47%)</title><rect x="701.5" y="117" width="5.5" height="15.0" fill="rgb(236,141,0)" rx="2" ry="2" />
<text  x="704.53" y="127.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::take_while (4 samples, 1.86%)</title><rect x="498.5" y="437" width="21.9" height="15.0" fill="rgb(232,207,2)" rx="2" ry="2" />
<text  x="501.47" y="447.5" >j..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::all (15 samples, 6.98%)</title><rect x="586.3" y="309" width="82.3" height="15.0" fill="rgb(239,147,32)" rx="2" ry="2" />
<text  x="589.28" y="319.5" >core::ite..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (1 samples, 0.47%)</title><rect x="108.8" y="357" width="5.5" height="15.0" fill="rgb(244,182,36)" rx="2" ry="2" />
<text  x="111.79" y="367.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.47%)</title><rect x="15.5" y="485" width="5.5" height="15.0" fill="rgb(234,71,40)" rx="2" ry="2" />
<text  x="18.49" y="495.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.93%)</title><rect x="943.0" y="149" width="11.0" height="15.0" fill="rgb(205,10,29)" rx="2" ry="2" />
<text  x="946.02" y="159.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.47%)</title><rect x="278.9" y="309" width="5.5" height="15.0" fill="rgb(252,36,51)" rx="2" ry="2" />
<text  x="281.93" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="986.9" y="117" width="5.5" height="15.0" fill="rgb(254,144,53)" rx="2" ry="2" />
<text  x="989.93" y="127.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.93%)</title><rect x="602.7" y="181" width="11.0" height="15.0" fill="rgb(230,202,10)" rx="2" ry="2" />
<text  x="605.74" y="191.5" ></text>
</g>
<g >
<title>_rust_dealloc (1 samples, 0.47%)</title><rect x="32.0" y="309" width="5.4" height="15.0" fill="rgb(221,229,36)" rx="2" ry="2" />
<text  x="34.95" y="319.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 7.44%)</title><rect x="580.8" y="373" width="87.8" height="15.0" fill="rgb(211,144,10)" rx="2" ry="2" />
<text  x="583.79" y="383.5" >core::cmp:..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.93%)</title><rect x="1074.7" y="197" width="11.0" height="15.0" fill="rgb(233,138,26)" rx="2" ry="2" />
<text  x="1077.74" y="207.5" ></text>
</g>
<g >
<title>core::ptr::write (2 samples, 0.93%)</title><rect x="449.1" y="469" width="10.9" height="15.0" fill="rgb(211,76,25)" rx="2" ry="2" />
<text  x="452.07" y="479.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::next_char (2 samples, 0.93%)</title><rect x="482.0" y="469" width="11.0" height="15.0" fill="rgb(207,168,11)" rx="2" ry="2" />
<text  x="485.00" y="479.5" ></text>
</g>
<g >
<title>IO_new_fopen (1 samples, 0.47%)</title><rect x="1140.6" y="661" width="5.5" height="15.0" fill="rgb(212,0,42)" rx="2" ry="2" />
<text  x="1143.60" y="671.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal::{{closure}} (206 samples, 95.81%)</title><rect x="15.5" y="757" width="1130.6" height="15.0" fill="rgb(254,57,23)" rx="2" ry="2" />
<text  x="18.49" y="767.5" >std::rt::lang_start_internal::{{closure}}</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::PathParser&gt;&gt;&gt;&gt; (8 samples, 3.72%)</title><rect x="32.0" y="517" width="43.9" height="15.0" fill="rgb(229,163,43)" rx="2" ry="2" />
<text  x="34.95" y="527.5" >core..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 2.79%)</title><rect x="1030.8" y="133" width="33.0" height="15.0" fill="rgb(250,133,16)" rx="2" ry="2" />
<text  x="1033.84" y="143.5" >ha..</text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.47%)</title><rect x="10.0" y="789" width="5.5" height="15.0" fill="rgb(220,52,22)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (4 samples, 1.86%)</title><rect x="674.1" y="277" width="21.9" height="15.0" fill="rgb(207,129,34)" rx="2" ry="2" />
<text  x="677.09" y="287.5" >&lt;..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (2 samples, 0.93%)</title><rect x="701.5" y="197" width="11.0" height="15.0" fill="rgb(239,186,50)" rx="2" ry="2" />
<text  x="704.53" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (3 samples, 1.40%)</title><rect x="740.0" y="213" width="16.4" height="15.0" fill="rgb(227,148,12)" rx="2" ry="2" />
<text  x="742.95" y="223.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 2.79%)</title><rect x="1030.8" y="149" width="33.0" height="15.0" fill="rgb(232,215,23)" rx="2" ry="2" />
<text  x="1033.84" y="159.5" >ha..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.47%)</title><rect x="366.7" y="389" width="5.5" height="15.0" fill="rgb(231,223,3)" rx="2" ry="2" />
<text  x="369.74" y="399.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.93%)</title><rect x="679.6" y="165" width="11.0" height="15.0" fill="rgb(215,194,14)" rx="2" ry="2" />
<text  x="682.58" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.47%)</title><rect x="553.3" y="421" width="5.5" height="15.0" fill="rgb(245,155,47)" rx="2" ry="2" />
<text  x="556.35" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="613.7" y="181" width="22.0" height="15.0" fill="rgb(212,8,27)" rx="2" ry="2" />
<text  x="616.72" y="191.5" >&lt;..</text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 1.86%)</title><rect x="674.1" y="261" width="21.9" height="15.0" fill="rgb(249,157,46)" rx="2" ry="2" />
<text  x="677.09" y="271.5" >c..</text>
</g>
<g >
<title>link_path_wal.ar. (1 samples, 0.47%)</title><rect x="1140.6" y="469" width="5.5" height="15.0" fill="rgb(236,137,13)" rx="2" ry="2" />
<text  x="1143.60" y="479.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="690.6" y="133" width="5.4" height="15.0" fill="rgb(223,56,44)" rx="2" ry="2" />
<text  x="693.56" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.47%)</title><rect x="1003.4" y="149" width="5.5" height="15.0" fill="rgb(253,128,39)" rx="2" ry="2" />
<text  x="1006.40" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (30 samples, 13.95%)</title><rect x="921.1" y="309" width="164.6" height="15.0" fill="rgb(233,218,4)" rx="2" ry="2" />
<text  x="924.07" y="319.5" >core::iter::traits::i..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 1.86%)</title><rect x="734.5" y="261" width="21.9" height="15.0" fill="rgb(251,68,42)" rx="2" ry="2" />
<text  x="737.47" y="271.5" >a..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::lt (8 samples, 3.72%)</title><rect x="712.5" y="437" width="43.9" height="15.0" fill="rgb(222,167,33)" rx="2" ry="2" />
<text  x="715.51" y="447.5" >json..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.47%)</title><rect x="992.4" y="149" width="5.5" height="15.0" fill="rgb(205,178,24)" rx="2" ry="2" />
<text  x="995.42" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 1.86%)</title><rect x="734.5" y="277" width="21.9" height="15.0" fill="rgb(232,185,30)" rx="2" ry="2" />
<text  x="737.47" y="287.5" >a..</text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.93%)</title><rect x="970.5" y="101" width="10.9" height="15.0" fill="rgb(241,90,27)" rx="2" ry="2" />
<text  x="973.47" y="111.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (1 samples, 0.47%)</title><rect x="257.0" y="373" width="5.5" height="15.0" fill="rgb(237,161,8)" rx="2" ry="2" />
<text  x="259.98" y="383.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 3.26%)</title><rect x="844.2" y="117" width="38.5" height="15.0" fill="rgb(242,191,21)" rx="2" ry="2" />
<text  x="847.23" y="127.5" >cor..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::expr (18 samples, 8.37%)</title><rect x="114.3" y="373" width="98.8" height="15.0" fill="rgb(254,138,16)" rx="2" ry="2" />
<text  x="117.28" y="383.5" >jsonpath_li..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (6 samples, 2.79%)</title><rect x="602.7" y="213" width="33.0" height="15.0" fill="rgb(223,117,46)" rx="2" ry="2" />
<text  x="605.74" y="223.5" >in..</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.93%)</title><rect x="1063.8" y="149" width="10.9" height="15.0" fill="rgb(214,117,8)" rx="2" ry="2" />
<text  x="1066.77" y="159.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.40%)</title><rect x="822.3" y="165" width="16.4" height="15.0" fill="rgb(217,175,46)" rx="2" ry="2" />
<text  x="825.28" y="175.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (1 samples, 0.47%)</title><rect x="729.0" y="37" width="5.5" height="15.0" fill="rgb(217,112,18)" rx="2" ry="2" />
<text  x="731.98" y="47.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.47%)</title><rect x="685.1" y="101" width="5.5" height="15.0" fill="rgb(234,220,10)" rx="2" ry="2" />
<text  x="688.07" y="111.5" ></text>
</g>
<g >
<title>std::panicking::try (206 samples, 95.81%)</title><rect x="15.5" y="789" width="1130.6" height="15.0" fill="rgb(210,10,47)" rx="2" ry="2" />
<text  x="18.49" y="799.5" >std::panicking::try</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.47%)</title><rect x="125.3" y="293" width="5.4" height="15.0" fill="rgb(214,61,51)" rx="2" ry="2" />
<text  x="128.26" y="303.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map_or (3 samples, 1.40%)</title><rect x="586.3" y="245" width="16.4" height="15.0" fill="rgb(253,117,22)" rx="2" ry="2" />
<text  x="589.28" y="255.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek (2 samples, 0.93%)</title><rect x="509.4" y="421" width="11.0" height="15.0" fill="rgb(246,201,32)" rx="2" ry="2" />
<text  x="512.44" y="431.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::pop_term (1 samples, 0.47%)</title><rect x="882.7" y="437" width="5.4" height="15.0" fill="rgb(231,10,1)" rx="2" ry="2" />
<text  x="885.65" y="447.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="646.7" y="165" width="5.4" height="15.0" fill="rgb(223,170,41)" rx="2" ry="2" />
<text  x="649.65" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 1.40%)</title><rect x="740.0" y="229" width="16.4" height="15.0" fill="rgb(224,41,6)" rx="2" ry="2" />
<text  x="742.95" y="239.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 3.26%)</title><rect x="844.2" y="133" width="38.5" height="15.0" fill="rgb(223,44,3)" rx="2" ry="2" />
<text  x="847.23" y="143.5" >cor..</text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::map_or (3 samples, 1.40%)</title><rect x="767.4" y="261" width="16.5" height="15.0" fill="rgb(236,166,17)" rx="2" ry="2" />
<text  x="770.40" y="271.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::push_term (1 samples, 0.47%)</title><rect x="1135.1" y="389" width="5.5" height="15.0" fill="rgb(247,152,28)" rx="2" ry="2" />
<text  x="1138.12" y="399.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (15 samples, 6.98%)</title><rect x="586.3" y="277" width="82.3" height="15.0" fill="rgb(247,133,52)" rx="2" ry="2" />
<text  x="589.28" y="287.5" >core::ite..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.93%)</title><rect x="465.5" y="469" width="11.0" height="15.0" fill="rgb(241,138,7)" rx="2" ry="2" />
<text  x="468.53" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.93%)</title><rect x="657.6" y="133" width="11.0" height="15.0" fill="rgb(219,34,40)" rx="2" ry="2" />
<text  x="660.63" y="143.5" ></text>
</g>
<g >
<title>_memcmp_avx2_movbe (1 samples, 0.47%)</title><rect x="976.0" y="69" width="5.4" height="15.0" fill="rgb(216,178,33)" rx="2" ry="2" />
<text  x="978.95" y="79.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::expr (12 samples, 5.58%)</title><rect x="229.5" y="405" width="65.9" height="15.0" fill="rgb(221,28,5)" rx="2" ry="2" />
<text  x="232.53" y="415.5" >jsonpat..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::PathParser&gt; (8 samples, 3.72%)</title><rect x="32.0" y="453" width="43.9" height="15.0" fill="rgb(212,101,13)" rx="2" ry="2" />
<text  x="34.95" y="463.5" >core..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 1.40%)</title><rect x="767.4" y="181" width="16.5" height="15.0" fill="rgb(248,203,18)" rx="2" ry="2" />
<text  x="770.40" y="191.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::and (1 samples, 0.47%)</title><rect x="493.0" y="453" width="5.5" height="15.0" fill="rgb(246,124,6)" rx="2" ry="2" />
<text  x="495.98" y="463.5" ></text>
</g>
<g >
<title>jsonpath_lib::select (204 samples, 94.88%)</title><rect x="21.0" y="549" width="1119.6" height="15.0" fill="rgb(229,94,44)" rx="2" ry="2" />
<text  x="23.98" y="559.5" >jsonpath_lib::select</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 2.79%)</title><rect x="339.3" y="469" width="32.9" height="15.0" fill="rgb(209,194,27)" rx="2" ry="2" />
<text  x="342.30" y="479.5" >al..</text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_filter (60 samples, 27.91%)</title><rect x="558.8" y="453" width="329.3" height="15.0" fill="rgb(213,218,15)" rx="2" ry="2" />
<text  x="561.84" y="463.5" >jsonpath_lib::selector::selector_impl::JsonS..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.93%)</title><rect x="723.5" y="181" width="11.0" height="15.0" fill="rgb(214,146,53)" rx="2" ry="2" />
<text  x="726.49" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParseNode&gt; (5 samples, 2.33%)</title><rect x="42.9" y="261" width="27.5" height="15.0" fill="rgb(254,167,16)" rx="2" ry="2" />
<text  x="45.93" y="271.5" >c..</text>
</g>
<g >
<title>&lt;indexmap::map::IndexMap&lt;K,V1,S1&gt; as core::cmp::PartialEq&lt;indexmap::map::IndexMap&lt;K,V2,S2&gt;&gt;&gt;::eq::{{closure}} (21 samples, 9.77%)</title><rect x="767.4" y="277" width="115.3" height="15.0" fill="rgb(209,219,40)" rx="2" ry="2" />
<text  x="770.40" y="287.5" >&lt;indexmap::map..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="613.7" y="197" width="22.0" height="15.0" fill="rgb(218,119,13)" rx="2" ry="2" />
<text  x="616.72" y="207.5" >&lt;..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (2 samples, 0.93%)</title><rect x="701.5" y="213" width="11.0" height="15.0" fill="rgb(243,41,42)" rx="2" ry="2" />
<text  x="704.53" y="223.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.47%)</title><rect x="1069.3" y="101" width="5.4" height="15.0" fill="rgb(237,159,54)" rx="2" ry="2" />
<text  x="1072.26" y="111.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 1.40%)</title><rect x="767.4" y="149" width="16.5" height="15.0" fill="rgb(243,149,8)" rx="2" ry="2" />
<text  x="770.40" y="159.5" ></text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.47%)</title><rect x="707.0" y="165" width="5.5" height="15.0" fill="rgb(215,55,13)" rx="2" ry="2" />
<text  x="710.02" y="175.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.93%)</title><rect x="800.3" y="149" width="11.0" height="15.0" fill="rgb(244,202,5)" rx="2" ry="2" />
<text  x="803.33" y="159.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::array (39 samples, 18.14%)</title><rect x="86.8" y="469" width="214.1" height="15.0" fill="rgb(252,22,0)" rx="2" ry="2" />
<text  x="89.84" y="479.5" >jsonpath_lib::paths::path_pa..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (4 samples, 1.86%)</title><rect x="959.5" y="213" width="21.9" height="15.0" fill="rgb(223,211,25)" rx="2" ry="2" />
<text  x="962.49" y="223.5" >i..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="997.9" y="149" width="5.5" height="15.0" fill="rgb(215,199,34)" rx="2" ry="2" />
<text  x="1000.91" y="159.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::new (37 samples, 17.21%)</title><rect x="322.8" y="517" width="203.1" height="15.0" fill="rgb(224,123,9)" rx="2" ry="2" />
<text  x="325.84" y="527.5" >jsonpath_lib::paths::path_..</text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (7 samples, 3.26%)</title><rect x="844.2" y="165" width="38.5" height="15.0" fill="rgb(208,210,3)" rx="2" ry="2" />
<text  x="847.23" y="175.5" >&lt;Q ..</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 1.40%)</title><rect x="767.4" y="197" width="16.5" height="15.0" fill="rgb(224,91,41)" rx="2" ry="2" />
<text  x="770.40" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (7 samples, 3.26%)</title><rect x="844.2" y="149" width="38.5" height="15.0" fill="rgb(218,115,45)" rx="2" ry="2" />
<text  x="847.23" y="159.5" >&lt;al..</text>
</g>
<g >
<title>_do_execve_fil.sr. (7 samples, 3.26%)</title><rect x="1151.6" y="821" width="38.4" height="15.0" fill="rgb(228,71,18)" rx="2" ry="2" />
<text  x="1154.58" y="831.5" >_do..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::contains_key (9 samples, 4.19%)</title><rect x="932.0" y="245" width="49.4" height="15.0" fill="rgb(214,20,32)" rx="2" ry="2" />
<text  x="935.05" y="255.5" >inde..</text>
</g>
<g >
<title>exc_page_fault (1 samples, 0.47%)</title><rect x="1146.1" y="757" width="5.5" height="15.0" fill="rgb(209,92,11)" rx="2" ry="2" />
<text  x="1149.09" y="767.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths_dot (3 samples, 1.40%)</title><rect x="306.4" y="469" width="16.4" height="15.0" fill="rgb(221,128,21)" rx="2" ry="2" />
<text  x="309.37" y="479.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (1 samples, 0.47%)</title><rect x="701.5" y="149" width="5.5" height="15.0" fill="rgb(217,209,49)" rx="2" ry="2" />
<text  x="704.53" y="159.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.47%)</title><rect x="257.0" y="341" width="5.5" height="15.0" fill="rgb(249,221,21)" rx="2" ry="2" />
<text  x="259.98" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.47%)</title><rect x="1003.4" y="197" width="5.5" height="15.0" fill="rgb(212,201,4)" rx="2" ry="2" />
<text  x="1006.40" y="207.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.93%)</title><rect x="657.6" y="69" width="11.0" height="15.0" fill="rgb(228,10,19)" rx="2" ry="2" />
<text  x="660.63" y="79.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 1.86%)</title><rect x="235.0" y="373" width="22.0" height="15.0" fill="rgb(211,95,54)" rx="2" ry="2" />
<text  x="238.02" y="383.5" >a..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.93%)</title><rect x="602.7" y="117" width="11.0" height="15.0" fill="rgb(205,44,31)" rx="2" ry="2" />
<text  x="605.74" y="127.5" ></text>
</g>
<g >
<title>IO_new_file_fopen (1 samples, 0.47%)</title><rect x="1140.6" y="629" width="5.5" height="15.0" fill="rgb(222,90,29)" rx="2" ry="2" />
<text  x="1143.60" y="639.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp::{{closure}} (2 samples, 0.93%)</title><rect x="701.5" y="277" width="11.0" height="15.0" fill="rgb(240,72,38)" rx="2" ry="2" />
<text  x="704.53" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 2.33%)</title><rect x="668.6" y="341" width="27.4" height="15.0" fill="rgb(238,190,39)" rx="2" ry="2" />
<text  x="671.60" y="351.5" >&lt;..</text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="723.5" y="101" width="5.5" height="15.0" fill="rgb(220,133,24)" rx="2" ry="2" />
<text  x="726.49" y="111.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (2 samples, 0.93%)</title><rect x="701.5" y="261" width="11.0" height="15.0" fill="rgb(244,89,23)" rx="2" ry="2" />
<text  x="704.53" y="271.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.47%)</title><rect x="789.3" y="117" width="5.5" height="15.0" fill="rgb(239,0,49)" rx="2" ry="2" />
<text  x="792.35" y="127.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.93%)</title><rect x="657.6" y="149" width="11.0" height="15.0" fill="rgb(205,158,3)" rx="2" ry="2" />
<text  x="660.63" y="159.5" ></text>
</g>
<g >
<title>_fopen_internal (1 samples, 0.47%)</title><rect x="1140.6" y="645" width="5.5" height="15.0" fill="rgb(209,193,18)" rx="2" ry="2" />
<text  x="1143.60" y="655.5" ></text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (2 samples, 0.93%)</title><rect x="21.0" y="517" width="11.0" height="15.0" fill="rgb(228,154,41)" rx="2" ry="2" />
<text  x="23.98" y="527.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.93%)</title><rect x="657.6" y="85" width="11.0" height="15.0" fill="rgb(250,95,25)" rx="2" ry="2" />
<text  x="660.63" y="95.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::op (5 samples, 2.33%)</title><rect x="235.0" y="389" width="27.5" height="15.0" fill="rgb(226,200,0)" rx="2" ry="2" />
<text  x="238.02" y="399.5" >j..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.47%)</title><rect x="119.8" y="341" width="5.5" height="15.0" fill="rgb(236,137,43)" rx="2" ry="2" />
<text  x="122.77" y="351.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="723.5" y="117" width="5.5" height="15.0" fill="rgb(212,59,51)" rx="2" ry="2" />
<text  x="726.49" y="127.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp::{{closure}} (4 samples, 1.86%)</title><rect x="712.5" y="245" width="22.0" height="15.0" fill="rgb(222,137,17)" rx="2" ry="2" />
<text  x="715.51" y="255.5" >j..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (1 samples, 0.47%)</title><rect x="158.2" y="325" width="5.5" height="15.0" fill="rgb(228,138,10)" rx="2" ry="2" />
<text  x="161.19" y="335.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (17 samples, 7.91%)</title><rect x="575.3" y="421" width="93.3" height="15.0" fill="rgb(212,33,45)" rx="2" ry="2" />
<text  x="578.30" y="431.5" >jsonpath_li..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="932.0" y="181" width="22.0" height="15.0" fill="rgb(254,94,26)" rx="2" ry="2" />
<text  x="935.05" y="191.5" >&lt;..</text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.47%)</title><rect x="1003.4" y="85" width="5.5" height="15.0" fill="rgb(251,136,15)" rx="2" ry="2" />
<text  x="1006.40" y="95.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::IndexMap&lt;K,V1,S1&gt; as core::cmp::PartialEq&lt;indexmap::map::IndexMap&lt;K,V2,S2&gt;&gt;&gt;::eq::{{closure}}::{{closure}} (3 samples, 1.40%)</title><rect x="586.3" y="229" width="16.4" height="15.0" fill="rgb(231,188,39)" rx="2" ry="2" />
<text  x="589.28" y="239.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (12 samples, 5.58%)</title><rect x="602.7" y="245" width="65.9" height="15.0" fill="rgb(251,162,22)" rx="2" ry="2" />
<text  x="605.74" y="255.5" >indexma..</text>
</g>
<g >
<title>alloc::alloc::dealloc (1 samples, 0.47%)</title><rect x="569.8" y="357" width="5.5" height="15.0" fill="rgb(252,221,33)" rx="2" ry="2" />
<text  x="572.81" y="367.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::IndexMap&lt;K,V1,S1&gt; as core::cmp::PartialEq&lt;indexmap::map::IndexMap&lt;K,V2,S2&gt;&gt;&gt;::eq (15 samples, 6.98%)</title><rect x="586.3" y="325" width="82.3" height="15.0" fill="rgb(226,137,51)" rx="2" ry="2" />
<text  x="589.28" y="335.5" >&lt;indexmap..</text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.86%)</title><rect x="712.5" y="309" width="22.0" height="15.0" fill="rgb(224,59,29)" rx="2" ry="2" />
<text  x="715.51" y="319.5" >&lt;..</text>
</g>
<g >
<title>jsonpath_lib::selector::utils::to_path_str (1 samples, 0.47%)</title><rect x="1113.2" y="373" width="5.5" height="15.0" fill="rgb(238,100,0)" rx="2" ry="2" />
<text  x="1116.16" y="383.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::selector::terms::ExprTerm&gt; (1 samples, 0.47%)</title><rect x="569.8" y="437" width="5.5" height="15.0" fill="rgb(245,77,2)" rx="2" ry="2" />
<text  x="572.81" y="447.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 13.95%)</title><rect x="921.1" y="357" width="164.6" height="15.0" fill="rgb(213,140,19)" rx="2" ry="2" />
<text  x="924.07" y="367.5" >&lt;core::iter::adapters..</text>
</g>
<g >
<title>_memcmp_avx2_movbe (1 samples, 0.47%)</title><rect x="778.4" y="133" width="5.5" height="15.0" fill="rgb(243,175,30)" rx="2" ry="2" />
<text  x="781.37" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.93%)</title><rect x="701.5" y="181" width="11.0" height="15.0" fill="rgb(229,116,21)" rx="2" ry="2" />
<text  x="704.53" y="191.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="910.1" y="325" width="5.5" height="15.0" fill="rgb(219,51,49)" rx="2" ry="2" />
<text  x="913.09" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (30 samples, 13.95%)</title><rect x="921.1" y="341" width="164.6" height="15.0" fill="rgb(217,202,49)" rx="2" ry="2" />
<text  x="924.07" y="351.5" >core::iter::traits::i..</text>
</g>
<g >
<title>int_realloc (3 samples, 1.40%)</title><rect x="740.0" y="165" width="16.4" height="15.0" fill="rgb(227,133,47)" rx="2" ry="2" />
<text  x="742.95" y="175.5" ></text>
</g>
<g >
<title>_GI___libc_free (1 samples, 0.47%)</title><rect x="15.5" y="453" width="5.5" height="15.0" fill="rgb(224,170,3)" rx="2" ry="2" />
<text  x="18.49" y="463.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.47%)</title><rect x="10.0" y="805" width="5.5" height="15.0" fill="rgb(240,0,47)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.93%)</title><rect x="657.6" y="117" width="11.0" height="15.0" fill="rgb(220,96,23)" rx="2" ry="2" />
<text  x="660.63" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (4 samples, 1.86%)</title><rect x="959.5" y="181" width="21.9" height="15.0" fill="rgb(209,46,2)" rx="2" ry="2" />
<text  x="962.49" y="191.5" >h..</text>
</g>
<g >
<title>_GI___libc_malloc (1 samples, 0.47%)</title><rect x="361.3" y="389" width="5.4" height="15.0" fill="rgb(213,207,14)" rx="2" ry="2" />
<text  x="364.26" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParseNode&gt; (2 samples, 0.93%)</title><rect x="59.4" y="165" width="11.0" height="15.0" fill="rgb(221,2,22)" rx="2" ry="2" />
<text  x="62.40" y="175.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 1.40%)</title><rect x="696.0" y="309" width="16.5" height="15.0" fill="rgb(243,107,37)" rx="2" ry="2" />
<text  x="699.05" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_array_eof (1 samples, 0.47%)</title><rect x="553.3" y="453" width="5.5" height="15.0" fill="rgb(247,223,1)" rx="2" ry="2" />
<text  x="556.35" y="463.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::next_token (11 samples, 5.12%)</title><rect x="460.0" y="485" width="60.4" height="15.0" fill="rgb(249,111,29)" rx="2" ry="2" />
<text  x="463.05" y="495.5" >jsonpa..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt; (8 samples, 3.72%)</title><rect x="32.0" y="373" width="43.9" height="15.0" fill="rgb(232,12,37)" rx="2" ry="2" />
<text  x="34.95" y="383.5" >core..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (5 samples, 2.33%)</title><rect x="932.0" y="213" width="27.5" height="15.0" fill="rgb(237,135,19)" rx="2" ry="2" />
<text  x="935.05" y="223.5" >i..</text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpEq as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json (16 samples, 7.44%)</title><rect x="580.8" y="389" width="87.8" height="15.0" fill="rgb(238,137,0)" rx="2" ry="2" />
<text  x="583.79" y="399.5" >&lt;jsonpath_..</text>
</g>
<g >
<title>std::panic::catch_unwind (205 samples, 95.35%)</title><rect x="15.5" y="741" width="1125.1" height="15.0" fill="rgb(249,130,45)" rx="2" ry="2" />
<text  x="18.49" y="751.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (1 samples, 0.47%)</title><rect x="690.6" y="85" width="5.4" height="15.0" fill="rgb(218,157,41)" rx="2" ry="2" />
<text  x="693.56" y="95.5" ></text>
</g>
<g >
<title>do_filp_open (1 samples, 0.47%)</title><rect x="1140.6" y="501" width="5.5" height="15.0" fill="rgb(226,179,14)" rx="2" ry="2" />
<text  x="1143.60" y="511.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="904.6" y="341" width="5.5" height="15.0" fill="rgb(227,81,28)" rx="2" ry="2" />
<text  x="907.60" y="351.5" ></text>
</g>
<g >
<title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (3 samples, 1.40%)</title><rect x="141.7" y="277" width="16.5" height="15.0" fill="rgb(233,67,28)" rx="2" ry="2" />
<text  x="144.72" y="287.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::utils::to_path_str (1 samples, 0.47%)</title><rect x="899.1" y="405" width="5.5" height="15.0" fill="rgb(246,114,46)" rx="2" ry="2" />
<text  x="902.12" y="415.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str::{{closure}}::{{closure}} (30 samples, 13.95%)</title><rect x="921.1" y="293" width="164.6" height="15.0" fill="rgb(208,110,41)" rx="2" ry="2" />
<text  x="924.07" y="303.5" >jsonpath_lib::selecto..</text>
</g>
<g >
<title>jsonpath_lib::selector::value_walker::ValueWalker::all_with_strs (5 samples, 2.33%)</title><rect x="893.6" y="421" width="27.5" height="15.0" fill="rgb(236,1,3)" rx="2" ry="2" />
<text  x="896.63" y="431.5" >j..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.47%)</title><rect x="954.0" y="197" width="5.5" height="15.0" fill="rgb(248,68,6)" rx="2" ry="2" />
<text  x="957.00" y="207.5" ></text>
</g>
<g >
<title>core::core_arch::simd::i8x16::new (1 samples, 0.47%)</title><rect x="652.1" y="69" width="5.5" height="15.0" fill="rgb(230,171,21)" rx="2" ry="2" />
<text  x="655.14" y="79.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.47%)</title><rect x="997.9" y="197" width="5.5" height="15.0" fill="rgb(238,113,45)" rx="2" ry="2" />
<text  x="1000.91" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.47%)</title><rect x="652.1" y="117" width="5.5" height="15.0" fill="rgb(243,71,6)" rx="2" ry="2" />
<text  x="655.14" y="127.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.47%)</title><rect x="1003.4" y="133" width="5.5" height="15.0" fill="rgb(234,92,38)" rx="2" ry="2" />
<text  x="1006.40" y="143.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (1 samples, 0.47%)</title><rect x="1003.4" y="101" width="5.5" height="15.0" fill="rgb(214,181,30)" rx="2" ry="2" />
<text  x="1006.40" y="111.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.47%)</title><rect x="536.9" y="453" width="5.5" height="15.0" fill="rgb(212,165,45)" rx="2" ry="2" />
<text  x="539.88" y="463.5" ></text>
</g>
<g >
<title>jsonpath_lib_be (208 samples, 96.74%)</title><rect x="10.0" y="885" width="1141.6" height="15.0" fill="rgb(249,194,32)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >jsonpath_lib_be</text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="646.7" y="133" width="5.4" height="15.0" fill="rgb(221,90,7)" rx="2" ry="2" />
<text  x="649.65" y="143.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term_num (3 samples, 1.40%)</title><rect x="141.7" y="325" width="16.5" height="15.0" fill="rgb(208,70,5)" rx="2" ry="2" />
<text  x="144.72" y="335.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 1.40%)</title><rect x="718.0" y="213" width="16.5" height="15.0" fill="rgb(218,170,45)" rx="2" ry="2" />
<text  x="721.00" y="223.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (205 samples, 95.35%)</title><rect x="15.5" y="581" width="1125.1" height="15.0" fill="rgb(247,10,23)" rx="2" ry="2" />
<text  x="18.49" y="591.5" >core::iter::traits::iterator::Iterator::for_each::call::{{closure}}</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 1.40%)</title><rect x="679.6" y="213" width="16.4" height="15.0" fill="rgb(212,130,13)" rx="2" ry="2" />
<text  x="682.58" y="223.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (1 samples, 0.47%)</title><rect x="202.1" y="229" width="5.5" height="15.0" fill="rgb(225,11,21)" rx="2" ry="2" />
<text  x="205.09" y="239.5" ></text>
</g>
<g >
<title>_GI___libc_free (1 samples, 0.47%)</title><rect x="48.4" y="229" width="5.5" height="15.0" fill="rgb(245,84,54)" rx="2" ry="2" />
<text  x="51.42" y="239.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.47%)</title><rect x="679.6" y="101" width="5.5" height="15.0" fill="rgb(246,223,9)" rx="2" ry="2" />
<text  x="682.58" y="111.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.47%)</title><rect x="569.8" y="389" width="5.5" height="15.0" fill="rgb(242,228,3)" rx="2" ry="2" />
<text  x="572.81" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="723.5" y="133" width="5.5" height="15.0" fill="rgb(227,226,30)" rx="2" ry="2" />
<text  x="726.49" y="143.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (8 samples, 3.72%)</title><rect x="712.5" y="341" width="43.9" height="15.0" fill="rgb(206,118,16)" rx="2" ry="2" />
<text  x="715.51" y="351.5" >&lt;all..</text>
</g>
<g >
<title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.47%)</title><rect x="1003.4" y="165" width="5.5" height="15.0" fill="rgb(249,157,1)" rx="2" ry="2" />
<text  x="1006.40" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.47%)</title><rect x="882.7" y="421" width="5.4" height="15.0" fill="rgb(249,164,31)" rx="2" ry="2" />
<text  x="885.65" y="431.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="910.1" y="309" width="5.5" height="15.0" fill="rgb(246,23,40)" rx="2" ry="2" />
<text  x="913.09" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (8 samples, 3.72%)</title><rect x="668.6" y="421" width="43.9" height="15.0" fill="rgb(228,118,27)" rx="2" ry="2" />
<text  x="671.60" y="431.5" >json..</text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 1.40%)</title><rect x="767.4" y="165" width="16.5" height="15.0" fill="rgb(223,125,17)" rx="2" ry="2" />
<text  x="770.40" y="175.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.47%)</title><rect x="718.0" y="165" width="5.5" height="15.0" fill="rgb(244,59,3)" rx="2" ry="2" />
<text  x="721.00" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 1.86%)</title><rect x="235.0" y="341" width="22.0" height="15.0" fill="rgb(217,54,30)" rx="2" ry="2" />
<text  x="238.02" y="351.5" >&lt;..</text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::compute_absolute_path_filter (1 samples, 0.47%)</title><rect x="542.4" y="453" width="5.5" height="15.0" fill="rgb(220,100,49)" rx="2" ry="2" />
<text  x="545.37" y="463.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.93%)</title><rect x="591.8" y="149" width="10.9" height="15.0" fill="rgb(220,56,32)" rx="2" ry="2" />
<text  x="594.77" y="159.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="981.4" y="149" width="5.5" height="15.0" fill="rgb(250,127,16)" rx="2" ry="2" />
<text  x="984.44" y="159.5" ></text>
</g>
<g >
<title>start (207 samples, 96.28%)</title><rect x="15.5" y="869" width="1136.1" height="15.0" fill="rgb(226,188,2)" rx="2" ry="2" />
<text  x="18.49" y="879.5" >start</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 3.72%)</title><rect x="668.6" y="357" width="43.9" height="15.0" fill="rgb(226,32,0)" rx="2" ry="2" />
<text  x="671.60" y="367.5" >&lt;all..</text>
</g>
<g >
<title>strlen (7 samples, 3.26%)</title><rect x="1151.6" y="741" width="38.4" height="15.0" fill="rgb(209,71,11)" rx="2" ry="2" />
<text  x="1154.58" y="751.5" >str..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.47%)</title><rect x="125.3" y="341" width="5.4" height="15.0" fill="rgb(235,183,7)" rx="2" ry="2" />
<text  x="128.26" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (12 samples, 5.58%)</title><rect x="1008.9" y="165" width="65.8" height="15.0" fill="rgb(237,208,26)" rx="2" ry="2" />
<text  x="1011.88" y="175.5" >hashbro..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.93%)</title><rect x="591.8" y="165" width="10.9" height="15.0" fill="rgb(223,112,0)" rx="2" ry="2" />
<text  x="594.77" y="175.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.47%)</title><rect x="992.4" y="133" width="5.5" height="15.0" fill="rgb(249,106,17)" rx="2" ry="2" />
<text  x="995.42" y="143.5" ></text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.93%)</title><rect x="509.4" y="341" width="11.0" height="15.0" fill="rgb(223,111,10)" rx="2" ry="2" />
<text  x="512.44" y="351.5" ></text>
</g>
<g >
<title>pthread_getattr_np (1 samples, 0.47%)</title><rect x="1140.6" y="677" width="5.5" height="15.0" fill="rgb(238,20,11)" rx="2" ry="2" />
<text  x="1143.60" y="687.5" ></text>
</g>
<g >
<title>jsonpath_lib_benches::main::{{closure}} (205 samples, 95.35%)</title><rect x="15.5" y="565" width="1125.1" height="15.0" fill="rgb(214,95,8)" rx="2" ry="2" />
<text  x="18.49" y="575.5" >jsonpath_lib_benches::main::{{closure}}</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (12 samples, 5.58%)</title><rect x="1008.9" y="197" width="65.8" height="15.0" fill="rgb(215,10,4)" rx="2" ry="2" />
<text  x="1011.88" y="207.5" >hashbro..</text>
</g>
<g >
<title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (4 samples, 1.86%)</title><rect x="712.5" y="277" width="22.0" height="15.0" fill="rgb(208,94,27)" rx="2" ry="2" />
<text  x="715.51" y="287.5" >&lt;..</text>
</g>
<g >
<title>core::num::dec2flt::parse::parse_number (1 samples, 0.47%)</title><rect x="147.2" y="245" width="5.5" height="15.0" fill="rgb(238,158,3)" rx="2" ry="2" />
<text  x="150.21" y="255.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (205 samples, 95.35%)</title><rect x="15.5" y="709" width="1125.1" height="15.0" fill="rgb(216,188,50)" rx="2" ry="2" />
<text  x="18.49" y="719.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>std::panicking::try (205 samples, 95.35%)</title><rect x="15.5" y="725" width="1125.1" height="15.0" fill="rgb(221,82,14)" rx="2" ry="2" />
<text  x="18.49" y="735.5" >std::panicking::try</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.47%)</title><rect x="734.5" y="245" width="5.5" height="15.0" fill="rgb(224,172,25)" rx="2" ry="2" />
<text  x="737.47" y="255.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (1 samples, 0.47%)</title><rect x="229.5" y="389" width="5.5" height="15.0" fill="rgb(212,26,16)" rx="2" ry="2" />
<text  x="232.53" y="399.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::PathParser::compile (82 samples, 38.14%)</title><rect x="75.9" y="533" width="450.0" height="15.0" fill="rgb(233,15,14)" rx="2" ry="2" />
<text  x="78.86" y="543.5" >jsonpath_lib::paths::path_parser::PathParser::compile</text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.47%)</title><rect x="10.0" y="725" width="5.5" height="15.0" fill="rgb(217,30,51)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (17 samples, 7.91%)</title><rect x="992.4" y="261" width="93.3" height="15.0" fill="rgb(222,89,52)" rx="2" ry="2" />
<text  x="995.42" y="271.5" >std::collec..</text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.40%)</title><rect x="696.0" y="325" width="16.5" height="15.0" fill="rgb(210,86,36)" rx="2" ry="2" />
<text  x="699.05" y="335.5" ></text>
</g>
<g >
<title>int_free (1 samples, 0.47%)</title><rect x="70.4" y="277" width="5.5" height="15.0" fill="rgb(232,39,12)" rx="2" ry="2" />
<text  x="73.37" y="287.5" ></text>
</g>
<g >
<title>core::intrinsics::copy (14 samples, 6.51%)</title><rect x="372.2" y="469" width="76.9" height="15.0" fill="rgb(232,48,9)" rx="2" ry="2" />
<text  x="375.23" y="479.5" >core::in..</text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.47%)</title><rect x="619.2" y="149" width="5.5" height="15.0" fill="rgb(227,148,5)" rx="2" ry="2" />
<text  x="622.21" y="159.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (1 samples, 0.47%)</title><rect x="103.3" y="389" width="5.5" height="15.0" fill="rgb(242,182,45)" rx="2" ry="2" />
<text  x="106.30" y="399.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.47%)</title><rect x="954.0" y="149" width="5.5" height="15.0" fill="rgb(208,210,11)" rx="2" ry="2" />
<text  x="957.00" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.47%)</title><rect x="1003.4" y="181" width="5.5" height="15.0" fill="rgb(223,49,25)" rx="2" ry="2" />
<text  x="1006.40" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (4 samples, 1.86%)</title><rect x="235.0" y="325" width="22.0" height="15.0" fill="rgb(232,220,29)" rx="2" ry="2" />
<text  x="238.02" y="335.5" >a..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (1 samples, 0.47%)</title><rect x="652.1" y="149" width="5.5" height="15.0" fill="rgb(228,16,49)" rx="2" ry="2" />
<text  x="655.14" y="159.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.93%)</title><rect x="970.5" y="117" width="10.9" height="15.0" fill="rgb(243,97,25)" rx="2" ry="2" />
<text  x="973.47" y="127.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.47%)</title><rect x="1118.7" y="261" width="5.4" height="15.0" fill="rgb(236,54,21)" rx="2" ry="2" />
<text  x="1121.65" y="271.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.47%)</title><rect x="729.0" y="85" width="5.5" height="15.0" fill="rgb(210,187,24)" rx="2" ry="2" />
<text  x="731.98" y="95.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 2.79%)</title><rect x="339.3" y="453" width="32.9" height="15.0" fill="rgb(233,210,29)" rx="2" ry="2" />
<text  x="342.30" y="463.5" >al..</text>
</g>
<g >
<title>_do_execve_fil.sr. (1 samples, 0.47%)</title><rect x="10.0" y="821" width="5.5" height="15.0" fill="rgb(237,73,13)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (8 samples, 3.72%)</title><rect x="163.7" y="357" width="43.9" height="15.0" fill="rgb(205,2,11)" rx="2" ry="2" />
<text  x="166.67" y="367.5" >json..</text>
</g>
<g >
<title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.86%)</title><rect x="674.1" y="293" width="21.9" height="15.0" fill="rgb(254,80,37)" rx="2" ry="2" />
<text  x="677.09" y="303.5" >&lt;..</text>
</g>
<g >
<title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (1 samples, 0.47%)</title><rect x="965.0" y="133" width="5.5" height="15.0" fill="rgb(247,35,6)" rx="2" ry="2" />
<text  x="967.98" y="143.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.47%)</title><rect x="910.1" y="341" width="5.5" height="15.0" fill="rgb(208,50,36)" rx="2" ry="2" />
<text  x="913.09" y="351.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (206 samples, 95.81%)</title><rect x="15.5" y="805" width="1130.6" height="15.0" fill="rgb(222,10,27)" rx="2" ry="2" />
<text  x="18.49" y="815.5" >std::panic::catch_unwind</text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (1 samples, 0.47%)</title><rect x="729.0" y="133" width="5.5" height="15.0" fill="rgb(251,63,29)" rx="2" ry="2" />
<text  x="731.98" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::new_in (2 samples, 0.93%)</title><rect x="1124.1" y="293" width="11.0" height="15.0" fill="rgb(230,71,14)" rx="2" ry="2" />
<text  x="1127.14" y="303.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 3.72%)</title><rect x="668.6" y="389" width="43.9" height="15.0" fill="rgb(225,201,38)" rx="2" ry="2" />
<text  x="671.60" y="399.5" >&lt;all..</text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (8 samples, 3.72%)</title><rect x="838.7" y="181" width="44.0" height="15.0" fill="rgb(225,81,31)" rx="2" ry="2" />
<text  x="841.74" y="191.5" >inde..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.47%)</title><rect x="652.1" y="165" width="5.5" height="15.0" fill="rgb(209,227,42)" rx="2" ry="2" />
<text  x="655.14" y="175.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 6.98%)</title><rect x="586.3" y="293" width="82.3" height="15.0" fill="rgb(218,146,4)" rx="2" ry="2" />
<text  x="589.28" y="303.5" >core::ite..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 1.40%)</title><rect x="1008.9" y="149" width="16.4" height="15.0" fill="rgb(227,179,9)" rx="2" ry="2" />
<text  x="1011.88" y="159.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.47%)</title><rect x="789.3" y="133" width="5.5" height="15.0" fill="rgb(217,109,46)" rx="2" ry="2" />
<text  x="792.35" y="143.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (3 samples, 1.40%)</title><rect x="1118.7" y="357" width="16.4" height="15.0" fill="rgb(209,172,3)" rx="2" ry="2" />
<text  x="1121.65" y="367.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (1 samples, 0.47%)</title><rect x="136.2" y="325" width="5.5" height="15.0" fill="rgb(233,135,43)" rx="2" ry="2" />
<text  x="139.23" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.47%)</title><rect x="1107.7" y="261" width="5.5" height="15.0" fill="rgb(253,156,27)" rx="2" ry="2" />
<text  x="1110.67" y="271.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_token (1 samples, 0.47%)</title><rect x="278.9" y="357" width="5.5" height="15.0" fill="rgb(234,127,17)" rx="2" ry="2" />
<text  x="281.93" y="367.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.93%)</title><rect x="970.5" y="149" width="10.9" height="15.0" fill="rgb(207,192,39)" rx="2" ry="2" />
<text  x="973.47" y="159.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="992.4" y="197" width="5.5" height="15.0" fill="rgb(214,112,30)" rx="2" ry="2" />
<text  x="995.42" y="207.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (2 samples, 0.93%)</title><rect x="32.0" y="325" width="10.9" height="15.0" fill="rgb(223,175,38)" rx="2" ry="2" />
<text  x="34.95" y="335.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="981.4" y="181" width="5.5" height="15.0" fill="rgb(214,23,8)" rx="2" ry="2" />
<text  x="984.44" y="191.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (19 samples, 8.84%)</title><rect x="108.8" y="389" width="104.3" height="15.0" fill="rgb(221,6,6)" rx="2" ry="2" />
<text  x="111.79" y="399.5" >jsonpath_lib..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="613.7" y="165" width="22.0" height="15.0" fill="rgb(229,197,47)" rx="2" ry="2" />
<text  x="616.72" y="175.5" >&lt;..</text>
</g>
<g >
<title>&lt;jsonpath_lib::paths::tokens::ParseToken as core::clone::Clone&gt;::clone (1 samples, 0.47%)</title><rect x="531.4" y="453" width="5.5" height="15.0" fill="rgb(245,36,21)" rx="2" ry="2" />
<text  x="534.40" y="463.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hash (2 samples, 0.93%)</title><rect x="981.4" y="197" width="11.0" height="15.0" fill="rgb(209,33,2)" rx="2" ry="2" />
<text  x="984.44" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 3.72%)</title><rect x="32.0" y="485" width="43.9" height="15.0" fill="rgb(206,169,31)" rx="2" ry="2" />
<text  x="34.95" y="495.5" >&lt;all..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (1 samples, 0.47%)</title><rect x="300.9" y="453" width="5.5" height="15.0" fill="rgb(210,177,7)" rx="2" ry="2" />
<text  x="303.88" y="463.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.40%)</title><rect x="696.0" y="341" width="16.5" height="15.0" fill="rgb(212,52,38)" rx="2" ry="2" />
<text  x="699.05" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.47%)</title><rect x="569.8" y="373" width="5.5" height="15.0" fill="rgb(214,40,12)" rx="2" ry="2" />
<text  x="572.81" y="383.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.93%)</title><rect x="981.4" y="261" width="11.0" height="15.0" fill="rgb(211,220,4)" rx="2" ry="2" />
<text  x="984.44" y="271.5" ></text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.47%)</title><rect x="729.0" y="101" width="5.5" height="15.0" fill="rgb(205,176,4)" rx="2" ry="2" />
<text  x="731.98" y="111.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (3 samples, 1.40%)</title><rect x="213.1" y="389" width="16.4" height="15.0" fill="rgb(254,124,12)" rx="2" ry="2" />
<text  x="216.07" y="399.5" ></text>
</g>
<g >
<title>int_malloc (4 samples, 1.86%)</title><rect x="235.0" y="277" width="22.0" height="15.0" fill="rgb(231,214,41)" rx="2" ry="2" />
<text  x="238.02" y="287.5" >i..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.47%)</title><rect x="553.3" y="405" width="5.5" height="15.0" fill="rgb(254,168,33)" rx="2" ry="2" />
<text  x="556.35" y="415.5" ></text>
</g>
<g >
<title>core::slice::&lt;impl [T]&gt;::first (1 samples, 0.47%)</title><rect x="152.7" y="245" width="5.5" height="15.0" fill="rgb(215,223,52)" rx="2" ry="2" />
<text  x="155.70" y="255.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (4 samples, 1.86%)</title><rect x="235.0" y="309" width="22.0" height="15.0" fill="rgb(216,188,44)" rx="2" ry="2" />
<text  x="238.02" y="319.5" >a..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::or (23 samples, 10.70%)</title><rect x="756.4" y="437" width="126.3" height="15.0" fill="rgb(246,119,49)" rx="2" ry="2" />
<text  x="759.42" y="447.5" >jsonpath_lib::s..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::compile (45 samples, 20.93%)</title><rect x="75.9" y="517" width="246.9" height="15.0" fill="rgb(236,55,36)" rx="2" ry="2" />
<text  x="78.86" y="527.5" >jsonpath_lib::paths::path_parser..</text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.47%)</title><rect x="986.9" y="181" width="5.5" height="15.0" fill="rgb(205,115,30)" rx="2" ry="2" />
<text  x="989.93" y="191.5" ></text>
</g>
<g >
<title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (3 samples, 1.40%)</title><rect x="1118.7" y="341" width="16.4" height="15.0" fill="rgb(226,32,7)" rx="2" ry="2" />
<text  x="1121.65" y="351.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 1.40%)</title><rect x="586.3" y="213" width="16.4" height="15.0" fill="rgb(245,77,0)" rx="2" ry="2" />
<text  x="589.28" y="223.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.93%)</title><rect x="981.4" y="213" width="11.0" height="15.0" fill="rgb(248,191,27)" rx="2" ry="2" />
<text  x="984.44" y="223.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.47%)</title><rect x="1140.6" y="693" width="5.5" height="15.0" fill="rgb(213,92,35)" rx="2" ry="2" />
<text  x="1143.60" y="703.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_u8 (2 samples, 0.93%)</title><rect x="602.7" y="165" width="11.0" height="15.0" fill="rgb(218,136,48)" rx="2" ry="2" />
<text  x="605.74" y="175.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::op (9 samples, 4.19%)</title><rect x="114.3" y="357" width="49.4" height="15.0" fill="rgb(223,10,19)" rx="2" ry="2" />
<text  x="117.28" y="367.5" >json..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 3.72%)</title><rect x="712.5" y="373" width="43.9" height="15.0" fill="rgb(247,204,29)" rx="2" ry="2" />
<text  x="715.51" y="383.5" >&lt;all..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 2.33%)</title><rect x="668.6" y="325" width="27.4" height="15.0" fill="rgb(254,140,54)" rx="2" ry="2" />
<text  x="671.60" y="335.5" >a..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp (8 samples, 3.72%)</title><rect x="712.5" y="421" width="43.9" height="15.0" fill="rgb(220,169,42)" rx="2" ry="2" />
<text  x="715.51" y="431.5" >json..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;*const serde_json::value::Value, (1 samples, 0.47%)</title><rect x="1107.7" y="341" width="5.5" height="15.0" fill="rgb(251,153,23)" rx="2" ry="2" />
<text  x="1110.67" y="351.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.47%)</title><rect x="729.0" y="53" width="5.5" height="15.0" fill="rgb(239,136,43)" rx="2" ry="2" />
<text  x="731.98" y="63.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (3 samples, 1.40%)</title><rect x="740.0" y="197" width="16.4" height="15.0" fill="rgb(209,156,7)" rx="2" ry="2" />
<text  x="742.95" y="207.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.47%)</title><rect x="893.6" y="373" width="5.5" height="15.0" fill="rgb(250,40,42)" rx="2" ry="2" />
<text  x="896.63" y="383.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="718.0" y="133" width="5.5" height="15.0" fill="rgb(250,120,29)" rx="2" ry="2" />
<text  x="721.00" y="143.5" ></text>
</g>
<g >
<title>std::collections::hash::set::HashSet&lt;T&gt;::new (3 samples, 1.40%)</title><rect x="1118.7" y="373" width="16.4" height="15.0" fill="rgb(227,126,8)" rx="2" ry="2" />
<text  x="1121.65" y="383.5" ></text>
</g>
<g >
<title>_x64_sys_execve (7 samples, 3.26%)</title><rect x="1151.6" y="837" width="38.4" height="15.0" fill="rgb(235,83,21)" rx="2" ry="2" />
<text  x="1154.58" y="847.5" >_x6..</text>
</g>
<g >
<title>std::rt::lang_start_internal (206 samples, 95.81%)</title><rect x="15.5" y="821" width="1130.6" height="15.0" fill="rgb(242,134,51)" rx="2" ry="2" />
<text  x="18.49" y="831.5" >std::rt::lang_start_internal</text>
</g>
<g >
<title>_memcmp_avx2_movbe (3 samples, 1.40%)</title><rect x="866.2" y="69" width="16.5" height="15.0" fill="rgb(253,8,39)" rx="2" ry="2" />
<text  x="869.19" y="79.5" ></text>
</g>
<g >
<title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.47%)</title><rect x="1025.3" y="149" width="5.5" height="15.0" fill="rgb(241,1,3)" rx="2" ry="2" />
<text  x="1028.35" y="159.5" ></text>
</g>
<g >
<title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.47%)</title><rect x="1080.2" y="181" width="5.5" height="15.0" fill="rgb(241,44,3)" rx="2" ry="2" />
<text  x="1083.23" y="191.5" ></text>
</g>
<g >
<title>change_protection (1 samples, 0.47%)</title><rect x="10.0" y="741" width="5.5" height="15.0" fill="rgb(246,110,54)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="959.5" y="133" width="5.5" height="15.0" fill="rgb(245,35,54)" rx="2" ry="2" />
<text  x="962.49" y="143.5" ></text>
</g>
<g >
<title>core::str::validations::next_code_point (2 samples, 0.93%)</title><rect x="509.4" y="357" width="11.0" height="15.0" fill="rgb(217,15,34)" rx="2" ry="2" />
<text  x="512.44" y="367.5" ></text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.47%)</title><rect x="707.0" y="117" width="5.5" height="15.0" fill="rgb(205,0,34)" rx="2" ry="2" />
<text  x="710.02" y="127.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.47%)</title><rect x="1025.3" y="117" width="5.5" height="15.0" fill="rgb(208,6,2)" rx="2" ry="2" />
<text  x="1028.35" y="127.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (4 samples, 1.86%)</title><rect x="141.7" y="341" width="22.0" height="15.0" fill="rgb(215,52,51)" rx="2" ry="2" />
<text  x="144.72" y="351.5" >j..</text>
</g>
<g >
<title>indexmap::map::core::equivalent::{{closure}} (2 samples, 0.93%)</title><rect x="657.6" y="165" width="11.0" height="15.0" fill="rgb(254,172,9)" rx="2" ry="2" />
<text  x="660.63" y="175.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.47%)</title><rect x="1140.6" y="709" width="5.5" height="15.0" fill="rgb(205,209,49)" rx="2" ry="2" />
<text  x="1143.60" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.47%)</title><rect x="125.3" y="309" width="5.4" height="15.0" fill="rgb(249,132,18)" rx="2" ry="2" />
<text  x="128.26" y="319.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="690.6" y="101" width="5.4" height="15.0" fill="rgb(244,98,49)" rx="2" ry="2" />
<text  x="693.56" y="111.5" ></text>
</g>
<g >
<title>exec_binprm (7 samples, 3.26%)</title><rect x="1151.6" y="805" width="38.4" height="15.0" fill="rgb(249,207,13)" rx="2" ry="2" />
<text  x="1154.58" y="815.5" >exe..</text>
</g>
<g >
<title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.47%)</title><rect x="954.0" y="181" width="5.5" height="15.0" fill="rgb(239,108,18)" rx="2" ry="2" />
<text  x="957.00" y="191.5" ></text>
</g>
<g >
<title>std::sys::unix::thread::guard::init (1 samples, 0.47%)</title><rect x="1140.6" y="725" width="5.5" height="15.0" fill="rgb(219,223,49)" rx="2" ry="2" />
<text  x="1143.60" y="735.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (4 samples, 1.86%)</title><rect x="235.0" y="293" width="22.0" height="15.0" fill="rgb(212,179,9)" rx="2" ry="2" />
<text  x="238.02" y="303.5" >_..</text>
</g>
<g >
<title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.93%)</title><rect x="509.4" y="373" width="11.0" height="15.0" fill="rgb(252,178,40)" rx="2" ry="2" />
<text  x="512.44" y="383.5" ></text>
</g>
<g >
<title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.47%)</title><rect x="954.0" y="165" width="5.5" height="15.0" fill="rgb(236,106,15)" rx="2" ry="2" />
<text  x="957.00" y="175.5" ></text>
</g>
<g >
<title>alloc::alloc::dealloc (1 samples, 0.47%)</title><rect x="15.5" y="469" width="5.5" height="15.0" fill="rgb(243,30,35)" rx="2" ry="2" />
<text  x="18.49" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.47%)</title><rect x="1146.1" y="773" width="5.5" height="15.0" fill="rgb(232,164,25)" rx="2" ry="2" />
<text  x="1149.09" y="783.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::fold (205 samples, 95.35%)</title><rect x="15.5" y="597" width="1125.1" height="15.0" fill="rgb(244,161,0)" rx="2" ry="2" />
<text  x="18.49" y="607.5" >core::iter::traits::iterator::Iterator::fold</text>
</g>
<g >
<title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.93%)</title><rect x="591.8" y="181" width="10.9" height="15.0" fill="rgb(241,89,16)" rx="2" ry="2" />
<text  x="594.77" y="191.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.47%)</title><rect x="619.2" y="133" width="5.5" height="15.0" fill="rgb(250,58,53)" rx="2" ry="2" />
<text  x="622.21" y="143.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (206 samples, 95.81%)</title><rect x="15.5" y="773" width="1130.6" height="15.0" fill="rgb(215,39,32)" rx="2" ry="2" />
<text  x="18.49" y="783.5" >std::panicking::try::do_call</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (6 samples, 2.79%)</title><rect x="635.7" y="213" width="32.9" height="15.0" fill="rgb(251,68,41)" rx="2" ry="2" />
<text  x="638.67" y="223.5" >in..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="986.9" y="133" width="5.5" height="15.0" fill="rgb(211,15,28)" rx="2" ry="2" />
<text  x="989.93" y="143.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1 samples, 0.47%)</title><rect x="690.6" y="149" width="5.4" height="15.0" fill="rgb(216,74,16)" rx="2" ry="2" />
<text  x="693.56" y="159.5" ></text>
</g>
<g >
<title>core::sync::atomic::atomic_load (1 samples, 0.47%)</title><rect x="295.4" y="373" width="5.5" height="15.0" fill="rgb(243,152,16)" rx="2" ry="2" />
<text  x="298.40" y="383.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 1.40%)</title><rect x="679.6" y="197" width="16.4" height="15.0" fill="rgb(237,82,39)" rx="2" ry="2" />
<text  x="682.58" y="207.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8 samples, 3.72%)</title><rect x="712.5" y="325" width="43.9" height="15.0" fill="rgb(230,135,3)" rx="2" ry="2" />
<text  x="715.51" y="335.5" >allo..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 1.86%)</title><rect x="734.5" y="309" width="21.9" height="15.0" fill="rgb(249,69,18)" rx="2" ry="2" />
<text  x="737.47" y="319.5" >a..</text>
</g>
<g >
<title>_GI___libc_realloc (3 samples, 1.40%)</title><rect x="740.0" y="181" width="16.4" height="15.0" fill="rgb(226,178,38)" rx="2" ry="2" />
<text  x="742.95" y="191.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.47%)</title><rect x="1069.3" y="117" width="5.4" height="15.0" fill="rgb(218,226,33)" rx="2" ry="2" />
<text  x="1072.26" y="127.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="701.5" y="165" width="5.5" height="15.0" fill="rgb(220,4,25)" rx="2" ry="2" />
<text  x="704.53" y="175.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.47%)</title><rect x="15.5" y="501" width="5.5" height="15.0" fill="rgb(228,27,51)" rx="2" ry="2" />
<text  x="18.49" y="511.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::term (6 samples, 2.79%)</title><rect x="262.5" y="389" width="32.9" height="15.0" fill="rgb(240,156,49)" rx="2" ry="2" />
<text  x="265.47" y="399.5" >js..</text>
</g>
<g >
<title>int_malloc (2 samples, 0.93%)</title><rect x="745.4" y="149" width="11.0" height="15.0" fill="rgb(247,58,16)" rx="2" ry="2" />
<text  x="748.44" y="159.5" ></text>
</g>
<g >
<title>hashbrown::map::make_insert_hash (2 samples, 0.93%)</title><rect x="992.4" y="213" width="11.0" height="15.0" fill="rgb(227,58,24)" rx="2" ry="2" />
<text  x="995.42" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="789.3" y="165" width="5.5" height="15.0" fill="rgb(232,104,45)" rx="2" ry="2" />
<text  x="792.35" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.47%)</title><rect x="10.0" y="869" width="5.5" height="15.0" fill="rgb(227,208,5)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 6.51%)</title><rect x="1008.9" y="213" width="76.8" height="15.0" fill="rgb(208,214,47)" rx="2" ry="2" />
<text  x="1011.88" y="223.5" >hashbrow..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;*const serde_json::value::Value,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.47%)</title><rect x="1107.7" y="357" width="5.5" height="15.0" fill="rgb(237,123,48)" rx="2" ry="2" />
<text  x="1110.67" y="367.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.93%)</title><rect x="602.7" y="133" width="11.0" height="15.0" fill="rgb(248,145,25)" rx="2" ry="2" />
<text  x="605.74" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 2.79%)</title><rect x="339.3" y="421" width="32.9" height="15.0" fill="rgb(212,30,26)" rx="2" ry="2" />
<text  x="342.30" y="431.5" >al..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.47%)</title><rect x="690.6" y="181" width="5.4" height="15.0" fill="rgb(245,15,36)" rx="2" ry="2" />
<text  x="693.56" y="191.5" ></text>
</g>
<g >
<title>load_elf_binary (7 samples, 3.26%)</title><rect x="1151.6" y="789" width="38.4" height="15.0" fill="rgb(241,150,33)" rx="2" ry="2" />
<text  x="1154.58" y="799.5" >loa..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.47%)</title><rect x="893.6" y="405" width="5.5" height="15.0" fill="rgb(227,211,37)" rx="2" ry="2" />
<text  x="896.63" y="415.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="986.9" y="149" width="5.5" height="15.0" fill="rgb(207,222,34)" rx="2" ry="2" />
<text  x="989.93" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.47%)</title><rect x="1102.2" y="325" width="5.5" height="15.0" fill="rgb(222,56,12)" rx="2" ry="2" />
<text  x="1105.19" y="335.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.47%)</title><rect x="926.6" y="261" width="5.4" height="15.0" fill="rgb(207,69,45)" rx="2" ry="2" />
<text  x="929.56" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (22 samples, 10.23%)</title><rect x="761.9" y="373" width="120.8" height="15.0" fill="rgb(206,62,32)" rx="2" ry="2" />
<text  x="764.91" y="383.5" >&lt;serde_json::va..</text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.47%)</title><rect x="125.3" y="277" width="5.4" height="15.0" fill="rgb(232,13,31)" rx="2" ry="2" />
<text  x="128.26" y="287.5" ></text>
</g>
<g >
<title>&lt;indexmap::map::IndexMap&lt;K,V1,S1&gt; as core::cmp::PartialEq&lt;indexmap::map::IndexMap&lt;K,V2,S2&gt;&gt;&gt;::eq::{{closure}}::{{closure}} (3 samples, 1.40%)</title><rect x="767.4" y="245" width="16.5" height="15.0" fill="rgb(250,133,43)" rx="2" ry="2" />
<text  x="770.40" y="255.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set_epi8 (1 samples, 0.47%)</title><rect x="652.1" y="85" width="5.5" height="15.0" fill="rgb(241,117,35)" rx="2" ry="2" />
<text  x="655.14" y="95.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter (40 samples, 18.60%)</title><rect x="921.1" y="421" width="219.5" height="15.0" fill="rgb(240,113,14)" rx="2" ry="2" />
<text  x="924.07" y="431.5" >jsonpath_lib::selector::terms..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (8 samples, 3.72%)</title><rect x="712.5" y="405" width="43.9" height="15.0" fill="rgb(239,65,10)" rx="2" ry="2" />
<text  x="715.51" y="415.5" >core..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (3 samples, 1.40%)</title><rect x="213.1" y="405" width="16.4" height="15.0" fill="rgb(209,189,27)" rx="2" ry="2" />
<text  x="216.07" y="415.5" ></text>
</g>
<g >
<title>std::collections::hash::map::RandomState::new (1 samples, 0.47%)</title><rect x="1118.7" y="293" width="5.4" height="15.0" fill="rgb(205,128,34)" rx="2" ry="2" />
<text  x="1121.65" y="303.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (5 samples, 2.33%)</title><rect x="789.3" y="229" width="27.5" height="15.0" fill="rgb(228,92,41)" rx="2" ry="2" />
<text  x="792.35" y="239.5" >i..</text>
</g>
<g >
<title>flush_tlb_func_commo.onstpro. (1 samples, 0.47%)</title><rect x="1146.1" y="629" width="5.5" height="15.0" fill="rgb(211,132,26)" rx="2" ry="2" />
<text  x="1149.09" y="639.5" ></text>
</g>
<g >
<title>tcache_put (2 samples, 0.93%)</title><rect x="246.0" y="261" width="11.0" height="15.0" fill="rgb(239,70,29)" rx="2" ry="2" />
<text  x="249.00" y="271.5" ></text>
</g>
<g >
<title>&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (3 samples, 1.40%)</title><rect x="767.4" y="229" width="16.5" height="15.0" fill="rgb(245,164,14)" rx="2" ry="2" />
<text  x="770.40" y="239.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 3.72%)</title><rect x="668.6" y="373" width="43.9" height="15.0" fill="rgb(217,208,44)" rx="2" ry="2" />
<text  x="671.60" y="383.5" >&lt;all..</text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.47%)</title><rect x="986.9" y="165" width="5.5" height="15.0" fill="rgb(236,193,15)" rx="2" ry="2" />
<text  x="989.93" y="175.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.93%)</title><rect x="943.0" y="133" width="11.0" height="15.0" fill="rgb(252,134,33)" rx="2" ry="2" />
<text  x="946.02" y="143.5" ></text>
</g>
<g >
<title>std::sys_common::rt::init (1 samples, 0.47%)</title><rect x="1140.6" y="741" width="5.5" height="15.0" fill="rgb(219,135,23)" rx="2" ry="2" />
<text  x="1143.60" y="751.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::str_reader::StrReader::peek::{{closure}} (2 samples, 0.93%)</title><rect x="509.4" y="389" width="11.0" height="15.0" fill="rgb(251,159,10)" rx="2" ry="2" />
<text  x="512.44" y="399.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="959.5" y="149" width="5.5" height="15.0" fill="rgb(238,48,28)" rx="2" ry="2" />
<text  x="962.49" y="159.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;&gt; (4 samples, 1.86%)</title><rect x="1085.7" y="373" width="22.0" height="15.0" fill="rgb(234,127,20)" rx="2" ry="2" />
<text  x="1088.72" y="383.5" >c..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (4 samples, 1.86%)</title><rect x="235.0" y="357" width="22.0" height="15.0" fill="rgb(242,57,48)" rx="2" ry="2" />
<text  x="238.02" y="367.5" >a..</text>
</g>
<g >
<title>_memmove_avx_unaligned_erms (14 samples, 6.51%)</title><rect x="372.2" y="453" width="76.9" height="15.0" fill="rgb(251,3,3)" rx="2" ry="2" />
<text  x="375.23" y="463.5" >_memmove..</text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.93%)</title><rect x="591.8" y="133" width="10.9" height="15.0" fill="rgb(207,148,46)" rx="2" ry="2" />
<text  x="594.77" y="143.5" ></text>
</g>
<g >
<title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (17 samples, 7.91%)</title><rect x="992.4" y="245" width="93.3" height="15.0" fill="rgb(237,222,52)" rx="2" ry="2" />
<text  x="995.42" y="255.5" >hashbrown::..</text>
</g>
<g >
<title>_rust_alloc (1 samples, 0.47%)</title><rect x="196.6" y="293" width="5.5" height="15.0" fill="rgb(236,104,46)" rx="2" ry="2" />
<text  x="199.60" y="303.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt;&gt; (5 samples, 2.33%)</title><rect x="42.9" y="245" width="27.5" height="15.0" fill="rgb(239,36,9)" rx="2" ry="2" />
<text  x="45.93" y="255.5" >c..</text>
</g>
<g >
<title>std::sys_common::backtrace::_rust_begin_short_backtrace (205 samples, 95.35%)</title><rect x="15.5" y="661" width="1125.1" height="15.0" fill="rgb(251,153,0)" rx="2" ry="2" />
<text  x="18.49" y="671.5" >std::sys_common::backtrace::_rust_begin_short_backtrace</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path_in_key (1 samples, 0.47%)</title><rect x="202.1" y="293" width="5.5" height="15.0" fill="rgb(235,109,16)" rx="2" ry="2" />
<text  x="205.09" y="303.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (2 samples, 0.93%)</title><rect x="130.7" y="341" width="11.0" height="15.0" fill="rgb(219,110,33)" rx="2" ry="2" />
<text  x="133.74" y="351.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.93%)</title><rect x="970.5" y="85" width="10.9" height="15.0" fill="rgb(223,16,9)" rx="2" ry="2" />
<text  x="973.47" y="95.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::gt (8 samples, 3.72%)</title><rect x="668.6" y="437" width="43.9" height="15.0" fill="rgb(232,20,9)" rx="2" ry="2" />
<text  x="671.60" y="447.5" >json..</text>
</g>
<g >
<title>&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 6.98%)</title><rect x="586.3" y="341" width="82.3" height="15.0" fill="rgb(237,212,7)" rx="2" ry="2" />
<text  x="589.28" y="351.5" >&lt;serde_js..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (8 samples, 3.72%)</title><rect x="668.6" y="405" width="43.9" height="15.0" fill="rgb(244,29,14)" rx="2" ry="2" />
<text  x="671.60" y="415.5" >core..</text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.47%)</title><rect x="904.6" y="277" width="5.5" height="15.0" fill="rgb(207,171,20)" rx="2" ry="2" />
<text  x="907.60" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 1.86%)</title><rect x="1085.7" y="341" width="22.0" height="15.0" fill="rgb(227,131,4)" rx="2" ry="2" />
<text  x="1088.72" y="351.5" >&lt;..</text>
</g>
<g >
<title>alloc::alloc::alloc (1 samples, 0.47%)</title><rect x="202.1" y="213" width="5.5" height="15.0" fill="rgb(224,69,8)" rx="2" ry="2" />
<text  x="205.09" y="223.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (3 samples, 1.40%)</title><rect x="718.0" y="197" width="16.5" height="15.0" fill="rgb(250,148,8)" rx="2" ry="2" />
<text  x="721.00" y="207.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.47%)</title><rect x="707.0" y="101" width="5.5" height="15.0" fill="rgb(236,165,46)" rx="2" ry="2" />
<text  x="710.02" y="111.5" ></text>
</g>
<g >
<title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.93%)</title><rect x="509.4" y="405" width="11.0" height="15.0" fill="rgb(232,226,22)" rx="2" ry="2" />
<text  x="512.44" y="415.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::json_path (45 samples, 20.93%)</title><rect x="75.9" y="501" width="246.9" height="15.0" fill="rgb(207,167,46)" rx="2" ry="2" />
<text  x="78.86" y="511.5" >jsonpath_lib::paths::path_parser..</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="992.4" y="181" width="5.5" height="15.0" fill="rgb(253,172,10)" rx="2" ry="2" />
<text  x="995.42" y="191.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::all (21 samples, 9.77%)</title><rect x="767.4" y="325" width="115.3" height="15.0" fill="rgb(244,88,1)" rx="2" ry="2" />
<text  x="770.40" y="335.5" >core::iter::tr..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (2 samples, 0.93%)</title><rect x="723.5" y="165" width="11.0" height="15.0" fill="rgb(218,2,44)" rx="2" ry="2" />
<text  x="726.49" y="175.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.47%)</title><rect x="630.2" y="133" width="5.5" height="15.0" fill="rgb(222,95,1)" rx="2" ry="2" />
<text  x="633.19" y="143.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.93%)</title><rect x="679.6" y="181" width="11.0" height="15.0" fill="rgb(227,186,34)" rx="2" ry="2" />
<text  x="682.58" y="191.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.47%)</title><rect x="339.3" y="405" width="5.5" height="15.0" fill="rgb(226,145,33)" rx="2" ry="2" />
<text  x="342.30" y="415.5" ></text>
</g>
<g >
<title>mprotect_fixup (1 samples, 0.47%)</title><rect x="10.0" y="757" width="5.5" height="15.0" fill="rgb(250,138,46)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 3.26%)</title><rect x="1151.6" y="869" width="38.4" height="15.0" fill="rgb(254,41,20)" rx="2" ry="2" />
<text  x="1154.58" y="879.5" >ent..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (1 samples, 0.47%)</title><rect x="15.5" y="517" width="5.5" height="15.0" fill="rgb(214,99,3)" rx="2" ry="2" />
<text  x="18.49" y="527.5" ></text>
</g>
<g >
<title>elf_get_dynamic_info (1 samples, 0.47%)</title><rect x="1146.1" y="789" width="5.5" height="15.0" fill="rgb(219,61,33)" rx="2" ry="2" />
<text  x="1149.09" y="799.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (1 samples, 0.47%)</title><rect x="569.8" y="405" width="5.5" height="15.0" fill="rgb(233,115,31)" rx="2" ry="2" />
<text  x="572.81" y="415.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::exprs (36 samples, 16.74%)</title><rect x="103.3" y="421" width="197.6" height="15.0" fill="rgb(225,100,27)" rx="2" ry="2" />
<text  x="106.30" y="431.5" >jsonpath_lib::paths::path..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::result::Result&lt;alloc::vec::Vec&lt;&amp;serde_json::value::Value&gt;,jsonpath_lib::select::JsonPathError&gt;&gt; (1 samples, 0.47%)</title><rect x="15.5" y="549" width="5.5" height="15.0" fill="rgb(226,229,15)" rx="2" ry="2" />
<text  x="18.49" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (1 samples, 0.47%)</title><rect x="202.1" y="261" width="5.5" height="15.0" fill="rgb(209,70,43)" rx="2" ry="2" />
<text  x="205.09" y="271.5" ></text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (1 samples, 0.47%)</title><rect x="652.1" y="101" width="5.5" height="15.0" fill="rgb(236,84,6)" rx="2" ry="2" />
<text  x="655.14" y="111.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::select (112 samples, 52.09%)</title><rect x="525.9" y="533" width="614.7" height="15.0" fill="rgb(215,113,54)" rx="2" ry="2" />
<text  x="528.91" y="543.5" >jsonpath_lib::selector::selector_impl::JsonSelector::select</text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::with_hasher_in (2 samples, 0.93%)</title><rect x="1124.1" y="309" width="11.0" height="15.0" fill="rgb(239,224,42)" rx="2" ry="2" />
<text  x="1127.14" y="319.5" ></text>
</g>
<g >
<title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.47%)</title><rect x="789.3" y="197" width="5.5" height="15.0" fill="rgb(207,120,53)" rx="2" ry="2" />
<text  x="792.35" y="207.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (6 samples, 2.79%)</title><rect x="635.7" y="197" width="32.9" height="15.0" fill="rgb(207,85,21)" rx="2" ry="2" />
<text  x="638.67" y="207.5" >ha..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.47%)</title><rect x="1107.7" y="245" width="5.5" height="15.0" fill="rgb(252,106,4)" rx="2" ry="2" />
<text  x="1110.67" y="255.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.93%)</title><rect x="350.3" y="389" width="11.0" height="15.0" fill="rgb(212,196,40)" rx="2" ry="2" />
<text  x="353.28" y="399.5" ></text>
</g>
<g >
<title>_GI___libc_realloc (2 samples, 0.93%)</title><rect x="350.3" y="341" width="11.0" height="15.0" fill="rgb(218,3,43)" rx="2" ry="2" />
<text  x="353.28" y="351.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_token (1 samples, 0.47%)</title><rect x="300.9" y="469" width="5.5" height="15.0" fill="rgb(229,74,45)" rx="2" ry="2" />
<text  x="303.88" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::realloc (2 samples, 0.93%)</title><rect x="350.3" y="357" width="11.0" height="15.0" fill="rgb(234,11,28)" rx="2" ry="2" />
<text  x="353.28" y="367.5" ></text>
</g>
<g >
<title>core::hash::Hasher::write_usize (1 samples, 0.47%)</title><rect x="997.9" y="181" width="5.5" height="15.0" fill="rgb(222,27,44)" rx="2" ry="2" />
<text  x="1000.91" y="191.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1 samples, 0.47%)</title><rect x="1140.6" y="517" width="5.5" height="15.0" fill="rgb(214,114,35)" rx="2" ry="2" />
<text  x="1143.60" y="527.5" ></text>
</g>
<g >
<title>std::rt::lang_start::{{closure}} (205 samples, 95.35%)</title><rect x="15.5" y="677" width="1125.1" height="15.0" fill="rgb(211,59,49)" rx="2" ry="2" />
<text  x="18.49" y="687.5" >std::rt::lang_start::{{closure}}</text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="794.8" y="197" width="22.0" height="15.0" fill="rgb(225,209,4)" rx="2" ry="2" />
<text  x="797.84" y="207.5" >&lt;..</text>
</g>
<g >
<title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.47%)</title><rect x="1118.7" y="309" width="5.4" height="15.0" fill="rgb(233,34,32)" rx="2" ry="2" />
<text  x="1121.65" y="319.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 1.86%)</title><rect x="734.5" y="293" width="21.9" height="15.0" fill="rgb(237,133,35)" rx="2" ry="2" />
<text  x="737.47" y="303.5" >a..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt; (3 samples, 1.40%)</title><rect x="53.9" y="229" width="16.5" height="15.0" fill="rgb(208,181,45)" rx="2" ry="2" />
<text  x="56.91" y="239.5" ></text>
</g>
<g >
<title>dl_start_final (1 samples, 0.47%)</title><rect x="1146.1" y="837" width="5.5" height="15.0" fill="rgb(207,160,51)" rx="2" ry="2" />
<text  x="1149.09" y="847.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (4 samples, 1.86%)</title><rect x="646.7" y="181" width="21.9" height="15.0" fill="rgb(208,54,53)" rx="2" ry="2" />
<text  x="649.65" y="191.5" >h..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.93%)</title><rect x="591.8" y="197" width="10.9" height="15.0" fill="rgb(234,61,12)" rx="2" ry="2" />
<text  x="594.77" y="207.5" ></text>
</g>
<g >
<title>setup_arg_pages (1 samples, 0.47%)</title><rect x="10.0" y="773" width="5.5" height="15.0" fill="rgb(215,155,17)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt; (6 samples, 2.79%)</title><rect x="42.9" y="325" width="33.0" height="15.0" fill="rgb(233,18,29)" rx="2" ry="2" />
<text  x="45.93" y="335.5" >co..</text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.47%)</title><rect x="1003.4" y="213" width="5.5" height="15.0" fill="rgb(240,139,46)" rx="2" ry="2" />
<text  x="1006.40" y="223.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="904.6" y="325" width="5.5" height="15.0" fill="rgb(247,111,49)" rx="2" ry="2" />
<text  x="907.60" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParseNode&gt; (8 samples, 3.72%)</title><rect x="32.0" y="405" width="43.9" height="15.0" fill="rgb(237,6,49)" rx="2" ry="2" />
<text  x="34.95" y="415.5" >core..</text>
</g>
<g >
<title>int_realloc (2 samples, 0.93%)</title><rect x="350.3" y="325" width="11.0" height="15.0" fill="rgb(233,191,6)" rx="2" ry="2" />
<text  x="353.28" y="335.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.93%)</title><rect x="723.5" y="149" width="11.0" height="15.0" fill="rgb(216,13,23)" rx="2" ry="2" />
<text  x="726.49" y="159.5" ></text>
</g>
<g >
<title>int_free (3 samples, 1.40%)</title><rect x="1085.7" y="293" width="16.5" height="15.0" fill="rgb(215,108,32)" rx="2" ry="2" />
<text  x="1088.72" y="303.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.47%)</title><rect x="926.6" y="245" width="5.4" height="15.0" fill="rgb(242,65,41)" rx="2" ry="2" />
<text  x="929.56" y="255.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt;&gt; (6 samples, 2.79%)</title><rect x="42.9" y="293" width="33.0" height="15.0" fill="rgb(233,96,38)" rx="2" ry="2" />
<text  x="45.93" y="303.5" >co..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1 samples, 0.47%)</title><rect x="718.0" y="181" width="5.5" height="15.0" fill="rgb(231,170,29)" rx="2" ry="2" />
<text  x="721.00" y="191.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt; (1 samples, 0.47%)</title><rect x="1107.7" y="325" width="5.5" height="15.0" fill="rgb(207,124,18)" rx="2" ry="2" />
<text  x="1110.67" y="335.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (2 samples, 0.93%)</title><rect x="701.5" y="245" width="11.0" height="15.0" fill="rgb(225,17,33)" rx="2" ry="2" />
<text  x="704.53" y="255.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::close_token (1 samples, 0.47%)</title><rect x="103.3" y="405" width="5.5" height="15.0" fill="rgb(221,136,53)" rx="2" ry="2" />
<text  x="106.30" y="415.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.47%)</title><rect x="1146.1" y="693" width="5.5" height="15.0" fill="rgb(211,201,48)" rx="2" ry="2" />
<text  x="1149.09" y="703.5" ></text>
</g>
<g >
<title>_libc_start_main (206 samples, 95.81%)</title><rect x="15.5" y="853" width="1130.6" height="15.0" fill="rgb(212,3,38)" rx="2" ry="2" />
<text  x="18.49" y="863.5" >_libc_start_main</text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="718.0" y="149" width="5.5" height="15.0" fill="rgb(245,160,28)" rx="2" ry="2" />
<text  x="721.00" y="159.5" ></text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.47%)</title><rect x="893.6" y="389" width="5.5" height="15.0" fill="rgb(213,10,19)" rx="2" ry="2" />
<text  x="896.63" y="399.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (1 samples, 0.47%)</title><rect x="185.6" y="309" width="5.5" height="15.0" fill="rgb(210,26,23)" rx="2" ry="2" />
<text  x="188.63" y="319.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::pop_term (1 samples, 0.47%)</title><rect x="553.3" y="437" width="5.5" height="15.0" fill="rgb(227,105,33)" rx="2" ry="2" />
<text  x="556.35" y="447.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="789.3" y="181" width="5.5" height="15.0" fill="rgb(248,6,14)" rx="2" ry="2" />
<text  x="792.35" y="191.5" ></text>
</g>
<g >
<title>_GI__IO_file_open (1 samples, 0.47%)</title><rect x="1140.6" y="613" width="5.5" height="15.0" fill="rgb(216,200,30)" rx="2" ry="2" />
<text  x="1143.60" y="623.5" ></text>
</g>
<g >
<title>_GI___libc_malloc (1 samples, 0.47%)</title><rect x="202.1" y="197" width="5.5" height="15.0" fill="rgb(224,147,46)" rx="2" ry="2" />
<text  x="205.09" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.47%)</title><rect x="10.0" y="853" width="5.5" height="15.0" fill="rgb(249,186,4)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>int_malloc (1 samples, 0.47%)</title><rect x="361.3" y="373" width="5.4" height="15.0" fill="rgb(228,64,3)" rx="2" ry="2" />
<text  x="364.26" y="383.5" ></text>
</g>
<g >
<title>tcache_get (1 samples, 0.47%)</title><rect x="202.1" y="181" width="5.5" height="15.0" fill="rgb(211,97,21)" rx="2" ry="2" />
<text  x="205.09" y="191.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.47%)</title><rect x="1118.7" y="277" width="5.4" height="15.0" fill="rgb(238,34,28)" rx="2" ry="2" />
<text  x="1121.65" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 1.40%)</title><rect x="767.4" y="213" width="16.5" height="15.0" fill="rgb(238,116,52)" rx="2" ry="2" />
<text  x="770.40" y="223.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::Tokenizer::other (4 samples, 1.86%)</title><rect x="498.5" y="453" width="21.9" height="15.0" fill="rgb(242,125,1)" rx="2" ry="2" />
<text  x="501.47" y="463.5" >j..</text>
</g>
<g >
<title>dl_start (1 samples, 0.47%)</title><rect x="1146.1" y="853" width="5.5" height="15.0" fill="rgb(226,122,0)" rx="2" ry="2" />
<text  x="1149.09" y="863.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::PathParser&gt;&gt; (8 samples, 3.72%)</title><rect x="32.0" y="469" width="43.9" height="15.0" fill="rgb(210,164,19)" rx="2" ry="2" />
<text  x="34.95" y="479.5" >core..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::ExprTerm::cmp::{{closure}} (4 samples, 1.86%)</title><rect x="674.1" y="245" width="21.9" height="15.0" fill="rgb(223,131,10)" rx="2" ry="2" />
<text  x="677.09" y="255.5" >j..</text>
</g>
<g >
<title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.93%)</title><rect x="657.6" y="101" width="11.0" height="15.0" fill="rgb(248,107,20)" rx="2" ry="2" />
<text  x="660.63" y="111.5" ></text>
</g>
<g >
<title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 3.26%)</title><rect x="844.2" y="85" width="38.5" height="15.0" fill="rgb(249,104,47)" rx="2" ry="2" />
<text  x="847.23" y="95.5" >&lt;[A..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::paths (4 samples, 1.86%)</title><rect x="273.4" y="373" width="22.0" height="15.0" fill="rgb(252,134,9)" rx="2" ry="2" />
<text  x="276.44" y="383.5" >j..</text>
</g>
<g >
<title>alloc::alloc::dealloc (3 samples, 1.40%)</title><rect x="1085.7" y="309" width="16.5" height="15.0" fill="rgb(226,173,42)" rx="2" ry="2" />
<text  x="1088.72" y="319.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.93%)</title><rect x="904.6" y="357" width="11.0" height="15.0" fill="rgb(220,67,30)" rx="2" ry="2" />
<text  x="907.60" y="367.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParseNode&gt; (6 samples, 2.79%)</title><rect x="42.9" y="357" width="33.0" height="15.0" fill="rgb(244,86,3)" rx="2" ry="2" />
<text  x="45.93" y="367.5" >co..</text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.93%)</title><rect x="959.5" y="165" width="11.0" height="15.0" fill="rgb(226,111,39)" rx="2" ry="2" />
<text  x="962.49" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.47%)</title><rect x="278.9" y="325" width="5.5" height="15.0" fill="rgb(229,42,0)" rx="2" ry="2" />
<text  x="281.93" y="335.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.40%)</title><rect x="822.3" y="149" width="16.4" height="15.0" fill="rgb(244,180,21)" rx="2" ry="2" />
<text  x="825.28" y="159.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert (23 samples, 10.70%)</title><rect x="333.8" y="485" width="126.2" height="15.0" fill="rgb(240,60,29)" rx="2" ry="2" />
<text  x="336.81" y="495.5" >alloc::vec::Vec..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (205 samples, 95.35%)</title><rect x="15.5" y="613" width="1125.1" height="15.0" fill="rgb(223,227,46)" rx="2" ry="2" />
<text  x="18.49" y="623.5" >core::iter::traits::iterator::Iterator::for_each</text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.47%)</title><rect x="1146.1" y="645" width="5.5" height="15.0" fill="rgb(226,123,53)" rx="2" ry="2" />
<text  x="1149.09" y="655.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.47%)</title><rect x="1107.7" y="293" width="5.5" height="15.0" fill="rgb(235,111,49)" rx="2" ry="2" />
<text  x="1110.67" y="303.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (12 samples, 5.58%)</title><rect x="816.8" y="197" width="65.9" height="15.0" fill="rgb(240,149,30)" rx="2" ry="2" />
<text  x="819.79" y="207.5" >hashbro..</text>
</g>
<g >
<title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 1.86%)</title><rect x="674.1" y="309" width="21.9" height="15.0" fill="rgb(214,179,40)" rx="2" ry="2" />
<text  x="677.09" y="319.5" >&lt;..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.47%)</title><rect x="92.3" y="453" width="5.5" height="15.0" fill="rgb(225,113,36)" rx="2" ry="2" />
<text  x="95.33" y="463.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (18 samples, 8.37%)</title><rect x="783.9" y="261" width="98.8" height="15.0" fill="rgb(238,168,53)" rx="2" ry="2" />
<text  x="786.86" y="271.5" >indexmap::m..</text>
</g>
<g >
<title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (4 samples, 1.86%)</title><rect x="959.5" y="197" width="21.9" height="15.0" fill="rgb(225,8,51)" rx="2" ry="2" />
<text  x="962.49" y="207.5" >h..</text>
</g>
<g >
<title>dl_main (1 samples, 0.47%)</title><rect x="1146.1" y="805" width="5.5" height="15.0" fill="rgb(246,26,45)" rx="2" ry="2" />
<text  x="1149.09" y="815.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::cmp::CmpOr as jsonpath_lib::selector::cmp::Cmp&gt;::cmp_json (23 samples, 10.70%)</title><rect x="756.4" y="405" width="126.3" height="15.0" fill="rgb(234,18,16)" rx="2" ry="2" />
<text  x="759.42" y="415.5" >&lt;jsonpath_lib::..</text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="789.3" y="149" width="5.5" height="15.0" fill="rgb(209,141,40)" rx="2" ry="2" />
<text  x="792.35" y="159.5" ></text>
</g>
<g >
<title>ptep_clear_flush (1 samples, 0.47%)</title><rect x="1146.1" y="661" width="5.5" height="15.0" fill="rgb(243,182,29)" rx="2" ry="2" />
<text  x="1149.09" y="671.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::selector_impl::JsonSelector::visit_key (46 samples, 21.40%)</title><rect x="888.1" y="453" width="252.5" height="15.0" fill="rgb(245,214,49)" rx="2" ry="2" />
<text  x="891.14" y="463.5" >jsonpath_lib::selector::selector_..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.47%)</title><rect x="202.1" y="245" width="5.5" height="15.0" fill="rgb(223,205,50)" rx="2" ry="2" />
<text  x="205.09" y="255.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.47%)</title><rect x="882.7" y="405" width="5.4" height="15.0" fill="rgb(234,48,42)" rx="2" ry="2" />
<text  x="885.65" y="415.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::filter_next_with_str::{{closure}} (39 samples, 18.14%)</title><rect x="921.1" y="389" width="214.0" height="15.0" fill="rgb(253,206,41)" rx="2" ry="2" />
<text  x="924.07" y="399.5" >jsonpath_lib::selector::term..</text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="690.6" y="117" width="5.4" height="15.0" fill="rgb(219,117,1)" rx="2" ry="2" />
<text  x="693.56" y="127.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::handlers::ParseNodeVisitor::visit (112 samples, 52.09%)</title><rect x="525.9" y="485" width="614.7" height="15.0" fill="rgb(254,163,54)" rx="2" ry="2" />
<text  x="528.91" y="495.5" >jsonpath_lib::paths::handlers::ParseNodeVisitor::visit</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;jsonpath_lib::paths::path_parser::ParseNode&gt; (6 samples, 2.79%)</title><rect x="42.9" y="309" width="33.0" height="15.0" fill="rgb(207,170,47)" rx="2" ry="2" />
<text  x="45.93" y="319.5" >co..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.47%)</title><rect x="965.0" y="101" width="5.5" height="15.0" fill="rgb(219,42,48)" rx="2" ry="2" />
<text  x="967.98" y="111.5" ></text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::push_json_term (40 samples, 18.60%)</title><rect x="921.1" y="405" width="219.5" height="15.0" fill="rgb(237,114,26)" rx="2" ry="2" />
<text  x="924.07" y="415.5" >jsonpath_lib::selector::terms..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.47%)</title><rect x="965.0" y="117" width="5.5" height="15.0" fill="rgb(243,138,12)" rx="2" ry="2" />
<text  x="967.98" y="127.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.47%)</title><rect x="904.6" y="309" width="5.5" height="15.0" fill="rgb(220,35,14)" rx="2" ry="2" />
<text  x="907.60" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="997.9" y="133" width="5.5" height="15.0" fill="rgb(245,140,32)" rx="2" ry="2" />
<text  x="1000.91" y="143.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.47%)</title><rect x="646.7" y="149" width="5.4" height="15.0" fill="rgb(222,198,17)" rx="2" ry="2" />
<text  x="649.65" y="159.5" ></text>
</g>
<g >
<title>core::ptr::write (1 samples, 0.47%)</title><rect x="536.9" y="437" width="5.5" height="15.0" fill="rgb(213,124,50)" rx="2" ry="2" />
<text  x="539.88" y="447.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::eat_whitespace (1 samples, 0.47%)</title><rect x="108.8" y="373" width="5.5" height="15.0" fill="rgb(234,168,8)" rx="2" ry="2" />
<text  x="111.79" y="383.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (12 samples, 5.58%)</title><rect x="602.7" y="229" width="65.9" height="15.0" fill="rgb(224,219,12)" rx="2" ry="2" />
<text  x="605.74" y="239.5" >indexma..</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (1 samples, 0.47%)</title><rect x="207.6" y="357" width="5.5" height="15.0" fill="rgb(245,0,25)" rx="2" ry="2" />
<text  x="210.58" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (2 samples, 0.93%)</title><rect x="350.3" y="373" width="11.0" height="15.0" fill="rgb(208,75,1)" rx="2" ry="2" />
<text  x="353.28" y="383.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (1 samples, 0.47%)</title><rect x="125.3" y="325" width="5.4" height="15.0" fill="rgb(212,131,9)" rx="2" ry="2" />
<text  x="128.26" y="335.5" ></text>
</g>
<g >
<title>core::ptr::read (1 samples, 0.47%)</title><rect x="224.0" y="357" width="5.5" height="15.0" fill="rgb(249,63,47)" rx="2" ry="2" />
<text  x="227.05" y="367.5" ></text>
</g>
<g >
<title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.47%)</title><rect x="811.3" y="149" width="5.5" height="15.0" fill="rgb(231,74,8)" rx="2" ry="2" />
<text  x="814.30" y="159.5" ></text>
</g>
<g >
<title>all (215 samples, 100%)</title><rect x="10.0" y="901" width="1180.0" height="15.0" fill="rgb(215,17,11)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 7.91%)</title><rect x="992.4" y="229" width="93.3" height="15.0" fill="rgb(224,206,12)" rx="2" ry="2" />
<text  x="995.42" y="239.5" >hashbrown::..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt;&gt; (8 samples, 3.72%)</title><rect x="32.0" y="389" width="43.9" height="15.0" fill="rgb(238,210,45)" rx="2" ry="2" />
<text  x="34.95" y="399.5" >core..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.47%)</title><rect x="789.3" y="213" width="5.5" height="15.0" fill="rgb(239,154,41)" rx="2" ry="2" />
<text  x="792.35" y="223.5" ></text>
</g>
<g >
<title>begin_new_exec (7 samples, 3.26%)</title><rect x="1151.6" y="773" width="38.4" height="15.0" fill="rgb(212,142,39)" rx="2" ry="2" />
<text  x="1154.58" y="783.5" >beg..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (12 samples, 5.58%)</title><rect x="816.8" y="229" width="65.9" height="15.0" fill="rgb(247,211,10)" rx="2" ry="2" />
<text  x="819.79" y="239.5" >indexma..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (205 samples, 95.35%)</title><rect x="15.5" y="645" width="1125.1" height="15.0" fill="rgb(230,135,28)" rx="2" ry="2" />
<text  x="18.49" y="655.5" >core::ops::function::FnOnce::call_once</text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::next_token (1 samples, 0.47%)</title><rect x="278.9" y="341" width="5.5" height="15.0" fill="rgb(229,182,12)" rx="2" ry="2" />
<text  x="281.93" y="351.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.93%)</title><rect x="679.6" y="117" width="11.0" height="15.0" fill="rgb(249,6,17)" rx="2" ry="2" />
<text  x="682.58" y="127.5" ></text>
</g>
<g >
<title>&lt;jsonpath_lib::selector::selector_impl::JsonSelector as jsonpath_lib::paths::handlers::ParseTokenHandler&gt;::handle (111 samples, 51.63%)</title><rect x="531.4" y="469" width="609.2" height="15.0" fill="rgb(216,122,35)" rx="2" ry="2" />
<text  x="534.40" y="479.5" >&lt;jsonpath_lib::selector::selector_impl::JsonSelector as jsonpath_lib::paths::handler..</text>
</g>
<g >
<title>dl_sysdep_start (1 samples, 0.47%)</title><rect x="1146.1" y="821" width="5.5" height="15.0" fill="rgb(245,150,15)" rx="2" ry="2" />
<text  x="1149.09" y="831.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::PathParser&gt;&gt;&gt; (8 samples, 3.72%)</title><rect x="32.0" y="501" width="43.9" height="15.0" fill="rgb(245,191,26)" rx="2" ry="2" />
<text  x="34.95" y="511.5" >core..</text>
</g>
<g >
<title>int_free (1 samples, 0.47%)</title><rect x="569.8" y="341" width="5.5" height="15.0" fill="rgb(228,65,9)" rx="2" ry="2" />
<text  x="572.81" y="351.5" ></text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.47%)</title><rect x="1069.3" y="133" width="5.4" height="15.0" fill="rgb(236,80,16)" rx="2" ry="2" />
<text  x="1072.26" y="143.5" ></text>
</g>
<g >
<title>cpumask_any_but (1 samples, 0.47%)</title><rect x="10.0" y="709" width="5.5" height="15.0" fill="rgb(251,79,8)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>_handle_mm_fault (1 samples, 0.47%)</title><rect x="1146.1" y="709" width="5.5" height="15.0" fill="rgb(236,58,5)" rx="2" ry="2" />
<text  x="1149.09" y="719.5" ></text>
</g>
<g >
<title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (1 samples, 0.47%)</title><rect x="701.5" y="133" width="5.5" height="15.0" fill="rgb(235,55,37)" rx="2" ry="2" />
<text  x="704.53" y="143.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (4 samples, 1.86%)</title><rect x="344.8" y="405" width="21.9" height="15.0" fill="rgb(214,196,45)" rx="2" ry="2" />
<text  x="347.79" y="415.5" >a..</text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (3 samples, 1.40%)</title><rect x="904.6" y="389" width="16.5" height="15.0" fill="rgb(215,70,52)" rx="2" ry="2" />
<text  x="907.60" y="399.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt; (5 samples, 2.33%)</title><rect x="42.9" y="277" width="27.5" height="15.0" fill="rgb(246,201,19)" rx="2" ry="2" />
<text  x="45.93" y="287.5" >c..</text>
</g>
<g >
<title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.47%)</title><rect x="701.5" y="101" width="5.5" height="15.0" fill="rgb(215,221,24)" rx="2" ry="2" />
<text  x="704.53" y="111.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="997.9" y="165" width="5.5" height="15.0" fill="rgb(225,7,14)" rx="2" ry="2" />
<text  x="1000.91" y="175.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::tokenizer::TokenReader::peek_token (1 samples, 0.47%)</title><rect x="257.0" y="357" width="5.5" height="15.0" fill="rgb(231,206,36)" rx="2" ry="2" />
<text  x="259.98" y="367.5" ></text>
</g>
<g >
<title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 3.26%)</title><rect x="844.2" y="101" width="38.5" height="15.0" fill="rgb(222,87,3)" rx="2" ry="2" />
<text  x="847.23" y="111.5" >cor..</text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (3 samples, 1.40%)</title><rect x="306.4" y="453" width="16.4" height="15.0" fill="rgb(248,148,15)" rx="2" ry="2" />
<text  x="309.37" y="463.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.47%)</title><rect x="1107.7" y="309" width="5.5" height="15.0" fill="rgb(237,175,10)" rx="2" ry="2" />
<text  x="1110.67" y="319.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.47%)</title><rect x="910.1" y="293" width="5.5" height="15.0" fill="rgb(214,99,26)" rx="2" ry="2" />
<text  x="913.09" y="303.5" ></text>
</g>
<g >
<title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.47%)</title><rect x="729.0" y="117" width="5.5" height="15.0" fill="rgb(205,153,18)" rx="2" ry="2" />
<text  x="731.98" y="127.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::path (2 samples, 0.93%)</title><rect x="284.4" y="341" width="11.0" height="15.0" fill="rgb(211,72,34)" rx="2" ry="2" />
<text  x="287.42" y="351.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::filter (36 samples, 16.74%)</title><rect x="103.3" y="437" width="197.6" height="15.0" fill="rgb(211,53,38)" rx="2" ry="2" />
<text  x="106.30" y="447.5" >jsonpath_lib::paths::path..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 1.40%)</title><rect x="1085.7" y="325" width="16.5" height="15.0" fill="rgb(235,48,42)" rx="2" ry="2" />
<text  x="1088.72" y="335.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt;&gt; (6 samples, 2.79%)</title><rect x="42.9" y="341" width="33.0" height="15.0" fill="rgb(210,67,35)" rx="2" ry="2" />
<text  x="45.93" y="351.5" >co..</text>
</g>
<g >
<title>do_sys_open (1 samples, 0.47%)</title><rect x="1140.6" y="533" width="5.5" height="15.0" fill="rgb(213,8,49)" rx="2" ry="2" />
<text  x="1143.60" y="543.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.47%)</title><rect x="224.0" y="373" width="5.5" height="15.0" fill="rgb(224,195,50)" rx="2" ry="2" />
<text  x="227.05" y="383.5" ></text>
</g>
<g >
<title>jsonpath_lib::paths::path_parser::ParserImpl::condition_expr (19 samples, 8.84%)</title><rect x="108.8" y="405" width="104.3" height="15.0" fill="rgb(233,102,10)" rx="2" ry="2" />
<text  x="111.79" y="415.5" >jsonpath_lib..</text>
</g>
<g >
<title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.93%)</title><rect x="602.7" y="197" width="11.0" height="15.0" fill="rgb(239,222,27)" rx="2" ry="2" />
<text  x="605.74" y="207.5" ></text>
</g>
<g >
<title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.93%)</title><rect x="981.4" y="229" width="11.0" height="15.0" fill="rgb(240,12,48)" rx="2" ry="2" />
<text  x="984.44" y="239.5" ></text>
</g>
<g >
<title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (18 samples, 8.37%)</title><rect x="783.9" y="245" width="98.8" height="15.0" fill="rgb(251,112,40)" rx="2" ry="2" />
<text  x="786.86" y="255.5" >indexmap::m..</text>
</g>
<g >
<title>core::core_arch::x86::sse2::mm_set1_epi8 (1 samples, 0.47%)</title><rect x="1003.4" y="117" width="5.5" height="15.0" fill="rgb(252,168,13)" rx="2" ry="2" />
<text  x="1006.40" y="127.5" ></text>
</g>
<g >
<title>serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;::get (3 samples, 1.40%)</title><rect x="904.6" y="405" width="16.5" height="15.0" fill="rgb(236,194,10)" rx="2" ry="2" />
<text  x="907.60" y="415.5" ></text>
</g>
<g >
<title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.93%)</title><rect x="1052.8" y="117" width="11.0" height="15.0" fill="rgb(205,149,4)" rx="2" ry="2" />
<text  x="1055.79" y="127.5" ></text>
</g>
<g >
<title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.40%)</title><rect x="822.3" y="181" width="16.4" height="15.0" fill="rgb(205,210,23)" rx="2" ry="2" />
<text  x="825.28" y="191.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="794.8" y="181" width="22.0" height="15.0" fill="rgb(213,152,38)" rx="2" ry="2" />
<text  x="797.84" y="191.5" >&lt;..</text>
</g>
<g >
<title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.47%)</title><rect x="366.7" y="405" width="5.5" height="15.0" fill="rgb(211,215,1)" rx="2" ry="2" />
<text  x="369.74" y="415.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::for_each (30 samples, 13.95%)</title><rect x="921.1" y="373" width="164.6" height="15.0" fill="rgb(216,157,10)" rx="2" ry="2" />
<text  x="924.07" y="383.5" >core::iter::traits::i..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;serde_json::value::Value&gt;&gt; (4 samples, 1.86%)</title><rect x="1085.7" y="357" width="22.0" height="15.0" fill="rgb(248,148,19)" rx="2" ry="2" />
<text  x="1088.72" y="367.5" >c..</text>
</g>
<g >
<title>jsonpath_lib::selector::terms::FilterTerms::collect_next_with_str (5 samples, 2.33%)</title><rect x="893.6" y="437" width="27.5" height="15.0" fill="rgb(232,225,7)" rx="2" ry="2" />
<text  x="896.63" y="447.5" >j..</text>
</g>
<g >
<title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::get_index_of (1 samples, 0.47%)</title><rect x="915.6" y="357" width="5.5" height="15.0" fill="rgb(230,202,43)" rx="2" ry="2" />
<text  x="918.58" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.47%)</title><rect x="1146.1" y="725" width="5.5" height="15.0" fill="rgb(213,137,8)" rx="2" ry="2" />
<text  x="1149.09" y="735.5" ></text>
</g>
<g >
<title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.47%)</title><rect x="904.6" y="293" width="5.5" height="15.0" fill="rgb(230,38,6)" rx="2" ry="2" />
<text  x="907.60" y="303.5" ></text>
</g>
<g >
<title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (205 samples, 95.35%)</title><rect x="15.5" y="693" width="1125.1" height="15.0" fill="rgb(238,196,47)" rx="2" ry="2" />
<text  x="18.49" y="703.5" >core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text>
</g>
<g >
<title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (2 samples, 0.93%)</title><rect x="1124.1" y="277" width="11.0" height="15.0" fill="rgb(211,194,39)" rx="2" ry="2" />
<text  x="1127.14" y="287.5" ></text>
</g>
<g >
<title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 1.86%)</title><rect x="932.0" y="197" width="22.0" height="15.0" fill="rgb(239,187,17)" rx="2" ry="2" />
<text  x="935.05" y="207.5" >&lt;..</text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt;&gt; (2 samples, 0.93%)</title><rect x="59.4" y="197" width="11.0" height="15.0" fill="rgb(230,2,32)" rx="2" ry="2" />
<text  x="62.40" y="207.5" ></text>
</g>
<g >
<title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;jsonpath_lib::paths::path_parser::ParseNode&gt;&gt; (2 samples, 0.93%)</title><rect x="59.4" y="181" width="11.0" height="15.0" fill="rgb(229,0,33)" rx="2" ry="2" />
<text  x="62.40" y="191.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.93%)</title><rect x="21.0" y="533" width="11.0" height="15.0" fill="rgb(251,204,7)" rx="2" ry="2" />
<text  x="23.98" y="543.5" ></text>
</g>
</g>
</svg>
